program
|-- class D : STR
|   |-- attr length:INT
|   |-- attr private x:STR
|   |-- method private print_xtype
|       |-- body
|           |-- assign var:STR
|           |   |-- call x <STR>
|           |       |-- caller
|           |           |-- self <D>
|           |-- typecase var
|               |-- INT
|               |   |-- binary + <OUT>
|               |       |-- binary + <OUT>
|               |       |   |-- binary + <OUT>
|               |       |   |   |-- create OUT <OUT>
|               |       |   |   |-- local var <STR>
|               |       |   |-- literal STR "es un " <STRING>
|               |       |-- literal STR "INT" <STRING>
|               |-- BOOL
|               |   |-- binary + <OUT>
|               |       |-- binary + <OUT>
|               |       |   |-- create OUT <OUT>
|               |       |   |-- local var <STR>
|               |       |-- literal STR "es un BOOL" <STRING>
|               |-- else
|                   |-- binary + <OUT>
|                       |-- binary + <OUT>
|                       |   |-- create OUT <OUT>
|                       |   |-- local var <STR>
|                       |-- literal STR "??" <STRING>
|-- class C : D
|   |-- include B
|   |-- attr y:STR
|-- class B : C
|   |-- attr length:INT
|   |-- attr c:CHAR
|   |-- method create : SAME
|   |   |-- body
|   |       |-- binary + <OUT>
|   |           |-- create OUT <OUT>
|   |           |-- literal STR "created B" <STRING>
|   |-- method y : STR
|   |   |-- body
|   |       |-- return
|   |           |-- literal STR "B" <STRING>
|   |-- include A
|       |-- length --> len
|       |-- c --> cA
|-- class E : C
|   |-- include C
|   |   |-- y --> yC
|   |-- method y : STR
|       |-- body
|           |-- if
|               |-- condition
|               |   |-- call is_zero <BOOL>
|               |   |   |-- caller
|               |   |       |-- call length <INT>
|               |   |           |-- caller
|               |   |               |-- call str <STRING>
|               |   |                   |-- caller
|               |   |                       |-- call yC <STR>
|               |   |                           |-- caller
|               |   |                               |-- self <E>
|               |   |-- body
|               |       |-- return
|               |           |-- literal STR "is empty" <STRING>
|               |-- else
|                   |-- return
|                       |-- call yC <STR>
|                           |-- caller
|                               |-- self <E>
|-- class A : B E
|   |-- include D
|   |   |-- length --> len
|   |-- attr length:INT
|   |-- attr y:STR
|   |-- attr c:CHAR
|   |-- method main
|       |-- body
|           |-- binary + <OUT>
|               |-- create OUT <OUT>
|               |-- call len <INT>
|                   |-- caller
|                       |-- self <A>
|-- class F : C A
    |-- include A
    |-- method private multiple_scoping
        |-- body
            |-- if
            |   |-- condition
            |       |-- binary < <BOOL>
            |       |   |-- call len <INT>
            |       |   |   |-- caller
            |       |   |       |-- self <F>
            |       |   |-- binary * <INT>
            |       |       |-- literal INT 7 <INT>
            |       |       |-- literal INT 5 <INT>
            |       |-- body
            |           |-- assign var2:INT
            |           |   |-- literal INT 57 <INT>
            |           |-- assign
            |           |   |-- call length <INT>
            |           |   |   |-- caller
            |           |   |       |-- self <F>
            |           |   |-- binary - <INT>
            |           |       |-- local var2 <INT>
            |           |       |-- literal INT 3 <INT>
            |           |-- assign var3:CHAR
            |           |   |-- literal CHAR '.' <CHAR>
            |           |-- binary + <OUT>
            |               |-- create OUT <OUT>
            |               |-- local var3 <CHAR>
            |-- assign var4:STRING
            |   |-- literal STR "otro string" <STRING>
            |-- assign var5:C
                |-- create C <C>

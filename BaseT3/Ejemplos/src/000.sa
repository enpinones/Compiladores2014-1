class CHAR_LIST_NODE is
   private attr this:CHAR;
   private attr next:SAME;

   create(first:STR):SAME is
      ret:CHAR_LIST_NODE:=new;
      if void(first) then
	 return ret;
      end;
      typecase first 
      when CHAR then
	 ret.this := first;
      when STRING then
	 ret.this := first.str.char(0);
      end;
      return ret;
   end;
   get_char is
      return self.this;
   end;
   get_next:SAME is
      return self.next;
   end;
   set_next(next:CHAR_LIST_NODE) is
      self.next:=next;
   end;
end;

class CHAR_LIST is
   private attr first:CHAR_LIST_NODE;

   create:SAME is
      ret::=new;
      ret.first := #CHAR_LIST_NODE("abc");
      return ret;
   end;
   next_char!:CHAR is
      aux:CHAR_LIST_NODE:=first;
      loop
	 while!(~void(aux));
	 yield aux;
	 aux := aux.get_next;
      end;
   end;

   append_char(data:CHAR) is
      block:CHAR_LIST:=#;
      block.this := data;
      block.next := (25 < 55*3%37) or 2;
      aux::=self.first;
      if void(aux) then
	 self.first := block;
	 return;
      end;
      loop
	 while!(~void(aux.get_next));
	 aux:=aux.get_next;
      end;
      aux.set_next(block);
   end;
end
	       

class D < STR is
   attr length:INT;
   private attr x:STR;

   private print_xtype is
      var::=self.x;
      typecase var
      when INT then
	 #OUT + var + "es un " + "INT";
      when BOOL then
	 #OUT + var + "es un " "BOOL";
      else 
	 #OUT + var + "??";
      end
   end
end;

class C < D is
   include B;
   attr y:STR;
end;

class B < C is
   attr length:INT;
   attr c:CHAR;
   create:SAME is
      #OUT+"created B";
   end;
   y:STR is
      return "B";
   end;
   include A length - len, c - cA;
end;

class E < C is
   include C y - yC;
   y:STR is
      if self.yC.str.length.is_zero then
	 return "is empty";
      else
	 return self.yC;
      end;
   end;
end;

class A < B, E is
   include D length - len;
   attr length:INT;
   attr y:STR;
   attr c:CHAR;
   main is
      #OUT+self.len;
   end;
end;

class F < C, A is
   include A;
   private multiple_scoping is
      if self.len < 7*5
      then
	 var2:INT:=57;
	 self.length := var2 - 3;
	 var3:CHAR := '\56';
	 #OUT + var3;
      end;
      var4::="otro string";
      var5::=#C;
   end
end

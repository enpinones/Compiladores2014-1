Terminals unused in grammar

   ERROR


Grammar

    0 $accept: source $end

    1 source: class_list

    2 semicolon_list: ";"
    3               | semicolon_list ";"

    4 class_list: class_list ";" class
    5           | class

    6 type_specifier: UPCASE_ID
    7               | SAME

    8 name: UPCASE_ID
    9     | ID

   10 routine_argument: ID ":" type_specifier
   11                 | identifier_list "," ID ":" type_specifier

   12 identifier_list: name
   13                | identifier_list "," name

   14 subtyping_clause: "<" type_spec_list

   15 type_spec_list: type_spec_list "," type_specifier
   16               | type_specifier

   17 class_def: UPCASE_ID
   18          | UPCASE_ID subtyping_clause

   19 class: CLASS class_def IS class_element_list END

   20 class_element: attr_definition
   21              | routine_definition
   22              | iter_definition
   23              | include_clause

   24 class_element_list: class_element
   25                   | class_element_list ";" class_element
   26                   | class_element_list ";"
   27                   | ";"

   28 attr_definition: public_attr_definition
   29                | PRIVATE public_attr_definition

   30 public_attr_definition: ATTR identifier_list ":" type_specifier

   31 routine_arg_list: routine_argument
   32                 | routine_arg_list "," routine_argument

   33 routine_def_public: ID IS statement_list END
   34                   | ID "(" routine_arg_list ")" IS statement_list END
   35                   | ID ":" type_specifier IS statement_list END
   36                   | ID "(" routine_arg_list ")" ":" type_specifier IS statement_list END

   37 routine_definition: routine_def_public
   38                   | PRIVATE routine_def_public

   39 iter_argument: routine_argument
   40              | ONCE routine_argument

   41 iter_arg_list: iter_argument
   42              | iter_argument "," iter_arg_list

   43 iter_definition_public: ITER_NAME IS statement_list END
   44                       | ITER_NAME "(" iter_arg_list ")" IS statement_list END
   45                       | ITER_NAME ":" type_specifier IS statement_list END
   46                       | ITER_NAME "(" iter_arg_list ")" ":" type_specifier IS statement_list END

   47 iter_definition: iter_definition_public
   48                | PRIVATE iter_definition_public

   49 feature_modifier: ID "-" ID
   50                 | ITER_NAME "-" ITER_NAME

   51 feature_modifier_list: feature_modifier
   52                      | feature_modifier "," feature_modifier_list

   53 include_clause: INCLUDE type_specifier feature_modifier_list
   54               | INCLUDE type_specifier

   55 statement_list: statement
   56               | ";" statement_list
   57               | statement semicolon_list
   58               | statement ";" statement_list

   59 statement: routine_argument
   60          | assign_statement
   61          | if_statement
   62          | return_statement
   63          | typecase_statement
   64          | expression_statement
   65          | loop_statement
   66          | yield_statement
   67          | QUIT

   68 assign_statement: expression ":=" expression
   69                 | ID ":" ":=" expression
   70                 | ID ":" type_specifier ":=" expression

   71 elseif_expre: ELSIF expression THEN statement_list

   72 elseif_list: elseif_expre
   73            | elseif_expre elseif_list

   74 if_statement: IF expression THEN statement_list END
   75             | IF expression THEN statement_list elseif_list END
   76             | IF expression THEN statement_list ELSE statement_list END
   77             | IF expression THEN statement_list elseif_list ELSE statement_list END

   78 return_statement: RETURN
   79                 | RETURN expression

   80 when_expr: WHEN type_specifier THEN statement_list

   81 when_list: when_expr
   82          | when_list when_expr

   83 typecase_statement: TYPECASE ID when_list END
   84                   | TYPECASE ID when_list ELSE statement_list END

   85 expression_statement: expression

   86 expression: BOOL
   87           | CHAR
   88           | STRING
   89           | INT
   90           | SELF
   91           | ID
   92           | call_expression
   93           | VOID
   94           | VOID "(" expression ")"
   95           | NEW
   96           | create_expression
   97           | sugar_expression
   98           | WHILE "(" expression ")"
   99           | BREAK

  100 call_name: ID
  101          | ITER_NAME

  102 expression_list: expression
  103                | expression "," expression_list

  104 call_expression: expression "." call_name
  105                | expression "." call_name "(" expression_list ")"

  106 create_expression: "#"
  107                  | "#" type_specifier
  108                  | "#" type_specifier "(" expression_list ")"
  109                  | "#" "(" expression_list ")"

  110 sugar_expression: expression AND expression
  111                 | expression OR expression
  112                 | expression "+" expression
  113                 | expression "-" expression
  114                 | expression "*" expression
  115                 | expression "/" expression
  116                 | expression "%" expression
  117                 | expression "<" expression
  118                 | expression "<=" expression
  119                 | expression "=" expression
  120                 | expression "/=" expression
  121                 | expression ">" expression
  122                 | expression ">=" expression
  123                 | "-" expression
  124                 | "(" expression ")"
  125                 | "~" expression

  126 loop_statement: LOOP statement_list END

  127 yield_statement: YIELD
  128                | YIELD expression


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 9 10 11 33 34 35 36 49 69 70 83 84 91 100
STRING (259) 88
UPCASE_ID (260) 6 8 17 18
ITER_NAME (261) 43 44 45 46 50 101
INT (262) 89
BOOL (263) 86
CHAR (264) 87
ERROR (265)
AND (266) 110
ATTR (267) 30
BREAK (268) 99
CLASS (269) 19
ELSE (270) 76 77 84
ELSIF (271) 71
END (272) 19 33 34 35 36 43 44 45 46 74 75 76 77 83 84 126
IF (273) 74 75 76 77
INCLUDE (274) 53 54
IS (275) 19 33 34 35 36 43 44 45 46
LOOP (276) 126
NEW (277) 95
OR (278) 111
ONCE (279) 40
PRIVATE (280) 29 38 48
QUIT (281) 67
RETURN (282) 78 79
SAME (283) 7
SELF (284) 90
THEN (285) 71 74 75 76 77 80
TYPECASE (286) 83 84
VOID (287) 93 94
WHEN (288) 80
WHILE (289) 98
YIELD (290) 127 128
"(" (291) 34 36 44 46 94 98 105 108 109 124
")" (292) 34 36 44 46 94 98 105 108 109 124
"," (293) 11 13 15 32 42 52 103
"." (294) 104 105
";" (295) 2 3 4 25 26 27 56 58
":" (296) 10 11 30 35 36 45 46 69 70
"+" (297) 112
"-" (298) 49 50 113 123
"*" (299) 114
"/" (300) 115
"%" (301) 116
"<" (302) 14 117
"<=" (303) 118
"=" (304) 119
"/=" (305) 120
">" (306) 121
">=" (307) 122
"~" (308) 125
":=" (309) 68 69 70
"#" (310) 106 107 108 109
UMINUS (311)


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
source (58)
    on left: 1, on right: 0
semicolon_list (59)
    on left: 2 3, on right: 3 57
class_list (60)
    on left: 4 5, on right: 1 4
type_specifier (61)
    on left: 6 7, on right: 10 11 15 16 30 35 36 45 46 53 54 70 80
    107 108
name (62)
    on left: 8 9, on right: 12 13
routine_argument (63)
    on left: 10 11, on right: 31 32 39 40 59
identifier_list (64)
    on left: 12 13, on right: 11 13 30
subtyping_clause (65)
    on left: 14, on right: 18
type_spec_list (66)
    on left: 15 16, on right: 14 15
class_def (67)
    on left: 17 18, on right: 19
class (68)
    on left: 19, on right: 4 5
class_element (69)
    on left: 20 21 22 23, on right: 24 25
class_element_list (70)
    on left: 24 25 26 27, on right: 19 25 26
attr_definition (71)
    on left: 28 29, on right: 20
public_attr_definition (72)
    on left: 30, on right: 28 29
routine_arg_list (73)
    on left: 31 32, on right: 32 34 36
routine_def_public (74)
    on left: 33 34 35 36, on right: 37 38
routine_definition (75)
    on left: 37 38, on right: 21
iter_argument (76)
    on left: 39 40, on right: 41 42
iter_arg_list (77)
    on left: 41 42, on right: 42 44 46
iter_definition_public (78)
    on left: 43 44 45 46, on right: 47 48
iter_definition (79)
    on left: 47 48, on right: 22
feature_modifier (80)
    on left: 49 50, on right: 51 52
feature_modifier_list (81)
    on left: 51 52, on right: 52 53
include_clause (82)
    on left: 53 54, on right: 23
statement_list (83)
    on left: 55 56 57 58, on right: 33 34 35 36 43 44 45 46 56 58 71
    74 75 76 77 80 84 126
statement (84)
    on left: 59 60 61 62 63 64 65 66 67, on right: 55 57 58
assign_statement (85)
    on left: 68 69 70, on right: 60
elseif_expre (86)
    on left: 71, on right: 72 73
elseif_list (87)
    on left: 72 73, on right: 73 75 77
if_statement (88)
    on left: 74 75 76 77, on right: 61
return_statement (89)
    on left: 78 79, on right: 62
when_expr (90)
    on left: 80, on right: 81 82
when_list (91)
    on left: 81 82, on right: 82 83 84
typecase_statement (92)
    on left: 83 84, on right: 63
expression_statement (93)
    on left: 85, on right: 64
expression (94)
    on left: 86 87 88 89 90 91 92 93 94 95 96 97 98 99, on right: 68
    69 70 71 74 75 76 77 79 85 94 98 102 103 104 105 110 111 112 113
    114 115 116 117 118 119 120 121 122 123 124 125 128
call_name (95)
    on left: 100 101, on right: 104 105
expression_list (96)
    on left: 102 103, on right: 103 105 108 109
call_expression (97)
    on left: 104 105, on right: 92
create_expression (98)
    on left: 106 107 108 109, on right: 96
sugar_expression (99)
    on left: 110 111 112 113 114 115 116 117 118 119 120 121 122 123
    124 125, on right: 97
loop_statement (100)
    on left: 126, on right: 65
yield_statement (101)
    on left: 127 128, on right: 66


State 0

    0 $accept: . source $end
    1 source: . class_list
    4 class_list: . class_list ";" class
    5           | . class
   19 class: . CLASS class_def IS class_element_list END

    CLASS  shift, and go to state 1

    source      go to state 2
    class_list  go to state 3
    class       go to state 4


State 1

   17 class_def: . UPCASE_ID
   18          | . UPCASE_ID subtyping_clause
   19 class: CLASS . class_def IS class_element_list END

    UPCASE_ID  shift, and go to state 5

    class_def  go to state 6


State 2

    0 $accept: source . $end

    $end  shift, and go to state 7


State 3

    1 source: class_list .  [$end]
    4 class_list: class_list . ";" class

    ";"  shift, and go to state 8

    $default  reduce using rule 1 (source)


State 4

    5 class_list: class .

    $default  reduce using rule 5 (class_list)


State 5

   14 subtyping_clause: . "<" type_spec_list
   17 class_def: UPCASE_ID .  [IS]
   18          | UPCASE_ID . subtyping_clause

    "<"  shift, and go to state 9

    $default  reduce using rule 17 (class_def)

    subtyping_clause  go to state 10


State 6

   19 class: CLASS class_def . IS class_element_list END

    IS  shift, and go to state 11


State 7

    0 $accept: source $end .

    $default  accept


State 8

    4 class_list: class_list ";" . class
   19 class: . CLASS class_def IS class_element_list END

    CLASS  shift, and go to state 1

    class  go to state 12


State 9

    6 type_specifier: . UPCASE_ID
    7               | . SAME
   14 subtyping_clause: "<" . type_spec_list
   15 type_spec_list: . type_spec_list "," type_specifier
   16               | . type_specifier

    UPCASE_ID  shift, and go to state 13
    SAME       shift, and go to state 14

    type_specifier  go to state 15
    type_spec_list  go to state 16


State 10

   18 class_def: UPCASE_ID subtyping_clause .

    $default  reduce using rule 18 (class_def)


State 11

   19 class: CLASS class_def IS . class_element_list END
   20 class_element: . attr_definition
   21              | . routine_definition
   22              | . iter_definition
   23              | . include_clause
   24 class_element_list: . class_element
   25                   | . class_element_list ";" class_element
   26                   | . class_element_list ";"
   27                   | . ";"
   28 attr_definition: . public_attr_definition
   29                | . PRIVATE public_attr_definition
   30 public_attr_definition: . ATTR identifier_list ":" type_specifier
   33 routine_def_public: . ID IS statement_list END
   34                   | . ID "(" routine_arg_list ")" IS statement_list END
   35                   | . ID ":" type_specifier IS statement_list END
   36                   | . ID "(" routine_arg_list ")" ":" type_specifier IS statement_list END
   37 routine_definition: . routine_def_public
   38                   | . PRIVATE routine_def_public
   43 iter_definition_public: . ITER_NAME IS statement_list END
   44                       | . ITER_NAME "(" iter_arg_list ")" IS statement_list END
   45                       | . ITER_NAME ":" type_specifier IS statement_list END
   46                       | . ITER_NAME "(" iter_arg_list ")" ":" type_specifier IS statement_list END
   47 iter_definition: . iter_definition_public
   48                | . PRIVATE iter_definition_public
   53 include_clause: . INCLUDE type_specifier feature_modifier_list
   54               | . INCLUDE type_specifier

    ID         shift, and go to state 17
    ITER_NAME  shift, and go to state 18
    ATTR       shift, and go to state 19
    INCLUDE    shift, and go to state 20
    PRIVATE    shift, and go to state 21
    ";"        shift, and go to state 22

    class_element           go to state 23
    class_element_list      go to state 24
    attr_definition         go to state 25
    public_attr_definition  go to state 26
    routine_def_public      go to state 27
    routine_definition      go to state 28
    iter_definition_public  go to state 29
    iter_definition         go to state 30
    include_clause          go to state 31


State 12

    4 class_list: class_list ";" class .

    $default  reduce using rule 4 (class_list)


State 13

    6 type_specifier: UPCASE_ID .

    $default  reduce using rule 6 (type_specifier)


State 14

    7 type_specifier: SAME .

    $default  reduce using rule 7 (type_specifier)


State 15

   16 type_spec_list: type_specifier .

    $default  reduce using rule 16 (type_spec_list)


State 16

   14 subtyping_clause: "<" type_spec_list .  [IS]
   15 type_spec_list: type_spec_list . "," type_specifier

    ","  shift, and go to state 32

    $default  reduce using rule 14 (subtyping_clause)


State 17

   33 routine_def_public: ID . IS statement_list END
   34                   | ID . "(" routine_arg_list ")" IS statement_list END
   35                   | ID . ":" type_specifier IS statement_list END
   36                   | ID . "(" routine_arg_list ")" ":" type_specifier IS statement_list END

    IS   shift, and go to state 33
    "("  shift, and go to state 34
    ":"  shift, and go to state 35


State 18

   43 iter_definition_public: ITER_NAME . IS statement_list END
   44                       | ITER_NAME . "(" iter_arg_list ")" IS statement_list END
   45                       | ITER_NAME . ":" type_specifier IS statement_list END
   46                       | ITER_NAME . "(" iter_arg_list ")" ":" type_specifier IS statement_list END

    IS   shift, and go to state 36
    "("  shift, and go to state 37
    ":"  shift, and go to state 38


State 19

    8 name: . UPCASE_ID
    9     | . ID
   12 identifier_list: . name
   13                | . identifier_list "," name
   30 public_attr_definition: ATTR . identifier_list ":" type_specifier

    ID         shift, and go to state 39
    UPCASE_ID  shift, and go to state 40

    name             go to state 41
    identifier_list  go to state 42


State 20

    6 type_specifier: . UPCASE_ID
    7               | . SAME
   53 include_clause: INCLUDE . type_specifier feature_modifier_list
   54               | INCLUDE . type_specifier

    UPCASE_ID  shift, and go to state 13
    SAME       shift, and go to state 14

    type_specifier  go to state 43


State 21

   29 attr_definition: PRIVATE . public_attr_definition
   30 public_attr_definition: . ATTR identifier_list ":" type_specifier
   33 routine_def_public: . ID IS statement_list END
   34                   | . ID "(" routine_arg_list ")" IS statement_list END
   35                   | . ID ":" type_specifier IS statement_list END
   36                   | . ID "(" routine_arg_list ")" ":" type_specifier IS statement_list END
   38 routine_definition: PRIVATE . routine_def_public
   43 iter_definition_public: . ITER_NAME IS statement_list END
   44                       | . ITER_NAME "(" iter_arg_list ")" IS statement_list END
   45                       | . ITER_NAME ":" type_specifier IS statement_list END
   46                       | . ITER_NAME "(" iter_arg_list ")" ":" type_specifier IS statement_list END
   48 iter_definition: PRIVATE . iter_definition_public

    ID         shift, and go to state 17
    ITER_NAME  shift, and go to state 18
    ATTR       shift, and go to state 19

    public_attr_definition  go to state 44
    routine_def_public      go to state 45
    iter_definition_public  go to state 46


State 22

   27 class_element_list: ";" .

    $default  reduce using rule 27 (class_element_list)


State 23

   24 class_element_list: class_element .

    $default  reduce using rule 24 (class_element_list)


State 24

   19 class: CLASS class_def IS class_element_list . END
   25 class_element_list: class_element_list . ";" class_element
   26                   | class_element_list . ";"

    END  shift, and go to state 47
    ";"  shift, and go to state 48


State 25

   20 class_element: attr_definition .

    $default  reduce using rule 20 (class_element)


State 26

   28 attr_definition: public_attr_definition .

    $default  reduce using rule 28 (attr_definition)


State 27

   37 routine_definition: routine_def_public .

    $default  reduce using rule 37 (routine_definition)


State 28

   21 class_element: routine_definition .

    $default  reduce using rule 21 (class_element)


State 29

   47 iter_definition: iter_definition_public .

    $default  reduce using rule 47 (iter_definition)


State 30

   22 class_element: iter_definition .

    $default  reduce using rule 22 (class_element)


State 31

   23 class_element: include_clause .

    $default  reduce using rule 23 (class_element)


State 32

    6 type_specifier: . UPCASE_ID
    7               | . SAME
   15 type_spec_list: type_spec_list "," . type_specifier

    UPCASE_ID  shift, and go to state 13
    SAME       shift, and go to state 14

    type_specifier  go to state 49


State 33

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   33 routine_def_public: ID IS . statement_list END
   55 statement_list: . statement
   56               | . ";" statement_list
   57               | . statement semicolon_list
   58               | . statement ";" statement_list
   59 statement: . routine_argument
   60          | . assign_statement
   61          | . if_statement
   62          | . return_statement
   63          | . typecase_statement
   64          | . expression_statement
   65          | . loop_statement
   66          | . yield_statement
   67          | . QUIT
   68 assign_statement: . expression ":=" expression
   69                 | . ID ":" ":=" expression
   70                 | . ID ":" type_specifier ":=" expression
   74 if_statement: . IF expression THEN statement_list END
   75             | . IF expression THEN statement_list elseif_list END
   76             | . IF expression THEN statement_list ELSE statement_list END
   77             | . IF expression THEN statement_list elseif_list ELSE statement_list END
   78 return_statement: . RETURN
   79                 | . RETURN expression
   83 typecase_statement: . TYPECASE ID when_list END
   84                   | . TYPECASE ID when_list ELSE statement_list END
   85 expression_statement: . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression
  126 loop_statement: . LOOP statement_list END
  127 yield_statement: . YIELD
  128                | . YIELD expression

    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    UPCASE_ID  shift, and go to state 40
    INT        shift, and go to state 52
    BOOL       shift, and go to state 53
    CHAR       shift, and go to state 54
    BREAK      shift, and go to state 55
    IF         shift, and go to state 56
    LOOP       shift, and go to state 57
    NEW        shift, and go to state 58
    QUIT       shift, and go to state 59
    RETURN     shift, and go to state 60
    SELF       shift, and go to state 61
    TYPECASE   shift, and go to state 62
    VOID       shift, and go to state 63
    WHILE      shift, and go to state 64
    YIELD      shift, and go to state 65
    "("        shift, and go to state 66
    ";"        shift, and go to state 67
    "-"        shift, and go to state 68
    "~"        shift, and go to state 69
    "#"        shift, and go to state 70

    name                  go to state 41
    routine_argument      go to state 71
    identifier_list       go to state 72
    statement_list        go to state 73
    statement             go to state 74
    assign_statement      go to state 75
    if_statement          go to state 76
    return_statement      go to state 77
    typecase_statement    go to state 78
    expression_statement  go to state 79
    expression            go to state 80
    call_expression       go to state 81
    create_expression     go to state 82
    sugar_expression      go to state 83
    loop_statement        go to state 84
    yield_statement       go to state 85


State 34

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   31 routine_arg_list: . routine_argument
   32                 | . routine_arg_list "," routine_argument
   34 routine_def_public: ID "(" . routine_arg_list ")" IS statement_list END
   36                   | ID "(" . routine_arg_list ")" ":" type_specifier IS statement_list END

    ID         shift, and go to state 86
    UPCASE_ID  shift, and go to state 40

    name              go to state 41
    routine_argument  go to state 87
    identifier_list   go to state 72
    routine_arg_list  go to state 88


State 35

    6 type_specifier: . UPCASE_ID
    7               | . SAME
   35 routine_def_public: ID ":" . type_specifier IS statement_list END

    UPCASE_ID  shift, and go to state 13
    SAME       shift, and go to state 14

    type_specifier  go to state 89


State 36

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   43 iter_definition_public: ITER_NAME IS . statement_list END
   55 statement_list: . statement
   56               | . ";" statement_list
   57               | . statement semicolon_list
   58               | . statement ";" statement_list
   59 statement: . routine_argument
   60          | . assign_statement
   61          | . if_statement
   62          | . return_statement
   63          | . typecase_statement
   64          | . expression_statement
   65          | . loop_statement
   66          | . yield_statement
   67          | . QUIT
   68 assign_statement: . expression ":=" expression
   69                 | . ID ":" ":=" expression
   70                 | . ID ":" type_specifier ":=" expression
   74 if_statement: . IF expression THEN statement_list END
   75             | . IF expression THEN statement_list elseif_list END
   76             | . IF expression THEN statement_list ELSE statement_list END
   77             | . IF expression THEN statement_list elseif_list ELSE statement_list END
   78 return_statement: . RETURN
   79                 | . RETURN expression
   83 typecase_statement: . TYPECASE ID when_list END
   84                   | . TYPECASE ID when_list ELSE statement_list END
   85 expression_statement: . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression
  126 loop_statement: . LOOP statement_list END
  127 yield_statement: . YIELD
  128                | . YIELD expression

    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    UPCASE_ID  shift, and go to state 40
    INT        shift, and go to state 52
    BOOL       shift, and go to state 53
    CHAR       shift, and go to state 54
    BREAK      shift, and go to state 55
    IF         shift, and go to state 56
    LOOP       shift, and go to state 57
    NEW        shift, and go to state 58
    QUIT       shift, and go to state 59
    RETURN     shift, and go to state 60
    SELF       shift, and go to state 61
    TYPECASE   shift, and go to state 62
    VOID       shift, and go to state 63
    WHILE      shift, and go to state 64
    YIELD      shift, and go to state 65
    "("        shift, and go to state 66
    ";"        shift, and go to state 67
    "-"        shift, and go to state 68
    "~"        shift, and go to state 69
    "#"        shift, and go to state 70

    name                  go to state 41
    routine_argument      go to state 71
    identifier_list       go to state 72
    statement_list        go to state 90
    statement             go to state 74
    assign_statement      go to state 75
    if_statement          go to state 76
    return_statement      go to state 77
    typecase_statement    go to state 78
    expression_statement  go to state 79
    expression            go to state 80
    call_expression       go to state 81
    create_expression     go to state 82
    sugar_expression      go to state 83
    loop_statement        go to state 84
    yield_statement       go to state 85


State 37

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   39 iter_argument: . routine_argument
   40              | . ONCE routine_argument
   41 iter_arg_list: . iter_argument
   42              | . iter_argument "," iter_arg_list
   44 iter_definition_public: ITER_NAME "(" . iter_arg_list ")" IS statement_list END
   46                       | ITER_NAME "(" . iter_arg_list ")" ":" type_specifier IS statement_list END

    ID         shift, and go to state 86
    UPCASE_ID  shift, and go to state 40
    ONCE       shift, and go to state 91

    name              go to state 41
    routine_argument  go to state 92
    identifier_list   go to state 72
    iter_argument     go to state 93
    iter_arg_list     go to state 94


State 38

    6 type_specifier: . UPCASE_ID
    7               | . SAME
   45 iter_definition_public: ITER_NAME ":" . type_specifier IS statement_list END

    UPCASE_ID  shift, and go to state 13
    SAME       shift, and go to state 14

    type_specifier  go to state 95


State 39

    9 name: ID .

    $default  reduce using rule 9 (name)


State 40

    8 name: UPCASE_ID .

    $default  reduce using rule 8 (name)


State 41

   12 identifier_list: name .

    $default  reduce using rule 12 (identifier_list)


State 42

   13 identifier_list: identifier_list . "," name
   30 public_attr_definition: ATTR identifier_list . ":" type_specifier

    ","  shift, and go to state 96
    ":"  shift, and go to state 97


State 43

   49 feature_modifier: . ID "-" ID
   50                 | . ITER_NAME "-" ITER_NAME
   51 feature_modifier_list: . feature_modifier
   52                      | . feature_modifier "," feature_modifier_list
   53 include_clause: INCLUDE type_specifier . feature_modifier_list
   54               | INCLUDE type_specifier .  [END, ";"]

    ID         shift, and go to state 98
    ITER_NAME  shift, and go to state 99

    $default  reduce using rule 54 (include_clause)

    feature_modifier       go to state 100
    feature_modifier_list  go to state 101


State 44

   29 attr_definition: PRIVATE public_attr_definition .

    $default  reduce using rule 29 (attr_definition)


State 45

   38 routine_definition: PRIVATE routine_def_public .

    $default  reduce using rule 38 (routine_definition)


State 46

   48 iter_definition: PRIVATE iter_definition_public .

    $default  reduce using rule 48 (iter_definition)


State 47

   19 class: CLASS class_def IS class_element_list END .

    $default  reduce using rule 19 (class)


State 48

   20 class_element: . attr_definition
   21              | . routine_definition
   22              | . iter_definition
   23              | . include_clause
   25 class_element_list: class_element_list ";" . class_element
   26                   | class_element_list ";" .  [END, ";"]
   28 attr_definition: . public_attr_definition
   29                | . PRIVATE public_attr_definition
   30 public_attr_definition: . ATTR identifier_list ":" type_specifier
   33 routine_def_public: . ID IS statement_list END
   34                   | . ID "(" routine_arg_list ")" IS statement_list END
   35                   | . ID ":" type_specifier IS statement_list END
   36                   | . ID "(" routine_arg_list ")" ":" type_specifier IS statement_list END
   37 routine_definition: . routine_def_public
   38                   | . PRIVATE routine_def_public
   43 iter_definition_public: . ITER_NAME IS statement_list END
   44                       | . ITER_NAME "(" iter_arg_list ")" IS statement_list END
   45                       | . ITER_NAME ":" type_specifier IS statement_list END
   46                       | . ITER_NAME "(" iter_arg_list ")" ":" type_specifier IS statement_list END
   47 iter_definition: . iter_definition_public
   48                | . PRIVATE iter_definition_public
   53 include_clause: . INCLUDE type_specifier feature_modifier_list
   54               | . INCLUDE type_specifier

    ID         shift, and go to state 17
    ITER_NAME  shift, and go to state 18
    ATTR       shift, and go to state 19
    INCLUDE    shift, and go to state 20
    PRIVATE    shift, and go to state 21

    $default  reduce using rule 26 (class_element_list)

    class_element           go to state 102
    attr_definition         go to state 25
    public_attr_definition  go to state 26
    routine_def_public      go to state 27
    routine_definition      go to state 28
    iter_definition_public  go to state 29
    iter_definition         go to state 30
    include_clause          go to state 31


State 49

   15 type_spec_list: type_spec_list "," type_specifier .

    $default  reduce using rule 15 (type_spec_list)


State 50

    9 name: ID .  [","]
   10 routine_argument: ID . ":" type_specifier
   69 assign_statement: ID . ":" ":=" expression
   70                 | ID . ":" type_specifier ":=" expression
   91 expression: ID .  [AND, ELSE, ELSIF, END, OR, WHEN, ".", ";", "+", "-", "*", "/", "%", "<", "<=", "=", "/=", ">", ">=", ":="]

    ":"  shift, and go to state 103

    ","       reduce using rule 9 (name)
    $default  reduce using rule 91 (expression)


State 51

   88 expression: STRING .

    $default  reduce using rule 88 (expression)


State 52

   89 expression: INT .

    $default  reduce using rule 89 (expression)


State 53

   86 expression: BOOL .

    $default  reduce using rule 86 (expression)


State 54

   87 expression: CHAR .

    $default  reduce using rule 87 (expression)


State 55

   99 expression: BREAK .

    $default  reduce using rule 99 (expression)


State 56

   74 if_statement: IF . expression THEN statement_list END
   75             | IF . expression THEN statement_list elseif_list END
   76             | IF . expression THEN statement_list ELSE statement_list END
   77             | IF . expression THEN statement_list elseif_list ELSE statement_list END
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 105
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 57

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   55 statement_list: . statement
   56               | . ";" statement_list
   57               | . statement semicolon_list
   58               | . statement ";" statement_list
   59 statement: . routine_argument
   60          | . assign_statement
   61          | . if_statement
   62          | . return_statement
   63          | . typecase_statement
   64          | . expression_statement
   65          | . loop_statement
   66          | . yield_statement
   67          | . QUIT
   68 assign_statement: . expression ":=" expression
   69                 | . ID ":" ":=" expression
   70                 | . ID ":" type_specifier ":=" expression
   74 if_statement: . IF expression THEN statement_list END
   75             | . IF expression THEN statement_list elseif_list END
   76             | . IF expression THEN statement_list ELSE statement_list END
   77             | . IF expression THEN statement_list elseif_list ELSE statement_list END
   78 return_statement: . RETURN
   79                 | . RETURN expression
   83 typecase_statement: . TYPECASE ID when_list END
   84                   | . TYPECASE ID when_list ELSE statement_list END
   85 expression_statement: . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression
  126 loop_statement: . LOOP statement_list END
  126               | LOOP . statement_list END
  127 yield_statement: . YIELD
  128                | . YIELD expression

    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    UPCASE_ID  shift, and go to state 40
    INT        shift, and go to state 52
    BOOL       shift, and go to state 53
    CHAR       shift, and go to state 54
    BREAK      shift, and go to state 55
    IF         shift, and go to state 56
    LOOP       shift, and go to state 57
    NEW        shift, and go to state 58
    QUIT       shift, and go to state 59
    RETURN     shift, and go to state 60
    SELF       shift, and go to state 61
    TYPECASE   shift, and go to state 62
    VOID       shift, and go to state 63
    WHILE      shift, and go to state 64
    YIELD      shift, and go to state 65
    "("        shift, and go to state 66
    ";"        shift, and go to state 67
    "-"        shift, and go to state 68
    "~"        shift, and go to state 69
    "#"        shift, and go to state 70

    name                  go to state 41
    routine_argument      go to state 71
    identifier_list       go to state 72
    statement_list        go to state 106
    statement             go to state 74
    assign_statement      go to state 75
    if_statement          go to state 76
    return_statement      go to state 77
    typecase_statement    go to state 78
    expression_statement  go to state 79
    expression            go to state 80
    call_expression       go to state 81
    create_expression     go to state 82
    sugar_expression      go to state 83
    loop_statement        go to state 84
    yield_statement       go to state 85


State 58

   95 expression: NEW .

    $default  reduce using rule 95 (expression)


State 59

   67 statement: QUIT .

    $default  reduce using rule 67 (statement)


State 60

   78 return_statement: RETURN .  [ELSE, ELSIF, END, WHEN, ";"]
   79                 | RETURN . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    $default  reduce using rule 78 (return_statement)

    expression         go to state 107
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 61

   90 expression: SELF .

    $default  reduce using rule 90 (expression)


State 62

   83 typecase_statement: TYPECASE . ID when_list END
   84                   | TYPECASE . ID when_list ELSE statement_list END

    ID  shift, and go to state 108


State 63

   93 expression: VOID .  [AND, ELSE, ELSIF, END, OR, THEN, WHEN, ")", ",", ".", ";", "+", "-", "*", "/", "%", "<", "<=", "=", "/=", ">", ">=", ":="]
   94           | VOID . "(" expression ")"

    "("  shift, and go to state 109

    $default  reduce using rule 93 (expression)


State 64

   98 expression: WHILE . "(" expression ")"

    "("  shift, and go to state 110


State 65

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression
  127 yield_statement: YIELD .  [ELSE, ELSIF, END, WHEN, ";"]
  128                | YIELD . expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    $default  reduce using rule 127 (yield_statement)

    expression         go to state 111
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 66

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  124                 | "(" . expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 112
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 67

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   55 statement_list: . statement
   56               | . ";" statement_list
   56               | ";" . statement_list
   57               | . statement semicolon_list
   58               | . statement ";" statement_list
   59 statement: . routine_argument
   60          | . assign_statement
   61          | . if_statement
   62          | . return_statement
   63          | . typecase_statement
   64          | . expression_statement
   65          | . loop_statement
   66          | . yield_statement
   67          | . QUIT
   68 assign_statement: . expression ":=" expression
   69                 | . ID ":" ":=" expression
   70                 | . ID ":" type_specifier ":=" expression
   74 if_statement: . IF expression THEN statement_list END
   75             | . IF expression THEN statement_list elseif_list END
   76             | . IF expression THEN statement_list ELSE statement_list END
   77             | . IF expression THEN statement_list elseif_list ELSE statement_list END
   78 return_statement: . RETURN
   79                 | . RETURN expression
   83 typecase_statement: . TYPECASE ID when_list END
   84                   | . TYPECASE ID when_list ELSE statement_list END
   85 expression_statement: . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression
  126 loop_statement: . LOOP statement_list END
  127 yield_statement: . YIELD
  128                | . YIELD expression

    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    UPCASE_ID  shift, and go to state 40
    INT        shift, and go to state 52
    BOOL       shift, and go to state 53
    CHAR       shift, and go to state 54
    BREAK      shift, and go to state 55
    IF         shift, and go to state 56
    LOOP       shift, and go to state 57
    NEW        shift, and go to state 58
    QUIT       shift, and go to state 59
    RETURN     shift, and go to state 60
    SELF       shift, and go to state 61
    TYPECASE   shift, and go to state 62
    VOID       shift, and go to state 63
    WHILE      shift, and go to state 64
    YIELD      shift, and go to state 65
    "("        shift, and go to state 66
    ";"        shift, and go to state 67
    "-"        shift, and go to state 68
    "~"        shift, and go to state 69
    "#"        shift, and go to state 70

    name                  go to state 41
    routine_argument      go to state 71
    identifier_list       go to state 72
    statement_list        go to state 113
    statement             go to state 74
    assign_statement      go to state 75
    if_statement          go to state 76
    return_statement      go to state 77
    typecase_statement    go to state 78
    expression_statement  go to state 79
    expression            go to state 80
    call_expression       go to state 81
    create_expression     go to state 82
    sugar_expression      go to state 83
    loop_statement        go to state 84
    yield_statement       go to state 85


State 68

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  123                 | "-" . expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 114
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 69

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression
  125                 | "~" . expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 115
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 70

    6 type_specifier: . UPCASE_ID
    7               | . SAME
  106 create_expression: "#" .  [AND, ELSE, ELSIF, END, OR, THEN, WHEN, ")", ",", ".", ";", "+", "-", "*", "/", "%", "<", "<=", "=", "/=", ">", ">=", ":="]
  107                  | "#" . type_specifier
  108                  | "#" . type_specifier "(" expression_list ")"
  109                  | "#" . "(" expression_list ")"

    UPCASE_ID  shift, and go to state 13
    SAME       shift, and go to state 14
    "("        shift, and go to state 116

    $default  reduce using rule 106 (create_expression)

    type_specifier  go to state 117


State 71

   59 statement: routine_argument .

    $default  reduce using rule 59 (statement)


State 72

   11 routine_argument: identifier_list . "," ID ":" type_specifier
   13 identifier_list: identifier_list . "," name

    ","  shift, and go to state 118


State 73

   33 routine_def_public: ID IS statement_list . END

    END  shift, and go to state 119


State 74

    2 semicolon_list: . ";"
    3               | . semicolon_list ";"
   55 statement_list: statement .  [ELSE, ELSIF, END, WHEN]
   57               | statement . semicolon_list
   58               | statement . ";" statement_list

    ";"  shift, and go to state 120

    $default  reduce using rule 55 (statement_list)

    semicolon_list  go to state 121


State 75

   60 statement: assign_statement .

    $default  reduce using rule 60 (statement)


State 76

   61 statement: if_statement .

    $default  reduce using rule 61 (statement)


State 77

   62 statement: return_statement .

    $default  reduce using rule 62 (statement)


State 78

   63 statement: typecase_statement .

    $default  reduce using rule 63 (statement)


State 79

   64 statement: expression_statement .

    $default  reduce using rule 64 (statement)


State 80

   68 assign_statement: expression . ":=" expression
   85 expression_statement: expression .  [ELSE, ELSIF, END, WHEN, ";"]
  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    AND   shift, and go to state 122
    OR    shift, and go to state 123
    "."   shift, and go to state 124
    "+"   shift, and go to state 125
    "-"   shift, and go to state 126
    "*"   shift, and go to state 127
    "/"   shift, and go to state 128
    "%"   shift, and go to state 129
    "<"   shift, and go to state 130
    "<="  shift, and go to state 131
    "="   shift, and go to state 132
    "/="  shift, and go to state 133
    ">"   shift, and go to state 134
    ">="  shift, and go to state 135
    ":="  shift, and go to state 136

    $default  reduce using rule 85 (expression_statement)


State 81

   92 expression: call_expression .

    $default  reduce using rule 92 (expression)


State 82

   96 expression: create_expression .

    $default  reduce using rule 96 (expression)


State 83

   97 expression: sugar_expression .

    $default  reduce using rule 97 (expression)


State 84

   65 statement: loop_statement .

    $default  reduce using rule 65 (statement)


State 85

   66 statement: yield_statement .

    $default  reduce using rule 66 (statement)


State 86

    9 name: ID .  [","]
   10 routine_argument: ID . ":" type_specifier

    ":"  shift, and go to state 137

    $default  reduce using rule 9 (name)


State 87

   31 routine_arg_list: routine_argument .

    $default  reduce using rule 31 (routine_arg_list)


State 88

   32 routine_arg_list: routine_arg_list . "," routine_argument
   34 routine_def_public: ID "(" routine_arg_list . ")" IS statement_list END
   36                   | ID "(" routine_arg_list . ")" ":" type_specifier IS statement_list END

    ")"  shift, and go to state 138
    ","  shift, and go to state 139


State 89

   35 routine_def_public: ID ":" type_specifier . IS statement_list END

    IS  shift, and go to state 140


State 90

   43 iter_definition_public: ITER_NAME IS statement_list . END

    END  shift, and go to state 141


State 91

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   40 iter_argument: ONCE . routine_argument

    ID         shift, and go to state 86
    UPCASE_ID  shift, and go to state 40

    name              go to state 41
    routine_argument  go to state 142
    identifier_list   go to state 72


State 92

   39 iter_argument: routine_argument .

    $default  reduce using rule 39 (iter_argument)


State 93

   41 iter_arg_list: iter_argument .  [")"]
   42              | iter_argument . "," iter_arg_list

    ","  shift, and go to state 143

    $default  reduce using rule 41 (iter_arg_list)


State 94

   44 iter_definition_public: ITER_NAME "(" iter_arg_list . ")" IS statement_list END
   46                       | ITER_NAME "(" iter_arg_list . ")" ":" type_specifier IS statement_list END

    ")"  shift, and go to state 144


State 95

   45 iter_definition_public: ITER_NAME ":" type_specifier . IS statement_list END

    IS  shift, and go to state 145


State 96

    8 name: . UPCASE_ID
    9     | . ID
   13 identifier_list: identifier_list "," . name

    ID         shift, and go to state 39
    UPCASE_ID  shift, and go to state 40

    name  go to state 146


State 97

    6 type_specifier: . UPCASE_ID
    7               | . SAME
   30 public_attr_definition: ATTR identifier_list ":" . type_specifier

    UPCASE_ID  shift, and go to state 13
    SAME       shift, and go to state 14

    type_specifier  go to state 147


State 98

   49 feature_modifier: ID . "-" ID

    "-"  shift, and go to state 148


State 99

   50 feature_modifier: ITER_NAME . "-" ITER_NAME

    "-"  shift, and go to state 149


State 100

   51 feature_modifier_list: feature_modifier .  [END, ";"]
   52                      | feature_modifier . "," feature_modifier_list

    ","  shift, and go to state 150

    $default  reduce using rule 51 (feature_modifier_list)


State 101

   53 include_clause: INCLUDE type_specifier feature_modifier_list .

    $default  reduce using rule 53 (include_clause)


State 102

   25 class_element_list: class_element_list ";" class_element .

    $default  reduce using rule 25 (class_element_list)


State 103

    6 type_specifier: . UPCASE_ID
    7               | . SAME
   10 routine_argument: ID ":" . type_specifier
   69 assign_statement: ID ":" . ":=" expression
   70                 | ID ":" . type_specifier ":=" expression

    UPCASE_ID  shift, and go to state 13
    SAME       shift, and go to state 14
    ":="       shift, and go to state 151

    type_specifier  go to state 152


State 104

   91 expression: ID .

    $default  reduce using rule 91 (expression)


State 105

   74 if_statement: IF expression . THEN statement_list END
   75             | IF expression . THEN statement_list elseif_list END
   76             | IF expression . THEN statement_list ELSE statement_list END
   77             | IF expression . THEN statement_list elseif_list ELSE statement_list END
  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    AND   shift, and go to state 122
    OR    shift, and go to state 123
    THEN  shift, and go to state 153
    "."   shift, and go to state 124
    "+"   shift, and go to state 125
    "-"   shift, and go to state 126
    "*"   shift, and go to state 127
    "/"   shift, and go to state 128
    "%"   shift, and go to state 129
    "<"   shift, and go to state 130
    "<="  shift, and go to state 131
    "="   shift, and go to state 132
    "/="  shift, and go to state 133
    ">"   shift, and go to state 134
    ">="  shift, and go to state 135


State 106

  126 loop_statement: LOOP statement_list . END

    END  shift, and go to state 154


State 107

   79 return_statement: RETURN expression .  [ELSE, ELSIF, END, WHEN, ";"]
  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    AND   shift, and go to state 122
    OR    shift, and go to state 123
    "."   shift, and go to state 124
    "+"   shift, and go to state 125
    "-"   shift, and go to state 126
    "*"   shift, and go to state 127
    "/"   shift, and go to state 128
    "%"   shift, and go to state 129
    "<"   shift, and go to state 130
    "<="  shift, and go to state 131
    "="   shift, and go to state 132
    "/="  shift, and go to state 133
    ">"   shift, and go to state 134
    ">="  shift, and go to state 135

    $default  reduce using rule 79 (return_statement)


State 108

   80 when_expr: . WHEN type_specifier THEN statement_list
   81 when_list: . when_expr
   82          | . when_list when_expr
   83 typecase_statement: TYPECASE ID . when_list END
   84                   | TYPECASE ID . when_list ELSE statement_list END

    WHEN  shift, and go to state 155

    when_expr  go to state 156
    when_list  go to state 157


State 109

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   94           | VOID "(" . expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 158
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 110

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   98           | WHILE "(" . expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 159
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 111

  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression
  128 yield_statement: YIELD expression .  [ELSE, ELSIF, END, WHEN, ";"]

    AND   shift, and go to state 122
    OR    shift, and go to state 123
    "."   shift, and go to state 124
    "+"   shift, and go to state 125
    "-"   shift, and go to state 126
    "*"   shift, and go to state 127
    "/"   shift, and go to state 128
    "%"   shift, and go to state 129
    "<"   shift, and go to state 130
    "<="  shift, and go to state 131
    "="   shift, and go to state 132
    "/="  shift, and go to state 133
    ">"   shift, and go to state 134
    ">="  shift, and go to state 135

    $default  reduce using rule 128 (yield_statement)


State 112

  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression
  124                 | "(" expression . ")"

    AND   shift, and go to state 122
    OR    shift, and go to state 123
    ")"   shift, and go to state 160
    "."   shift, and go to state 124
    "+"   shift, and go to state 125
    "-"   shift, and go to state 126
    "*"   shift, and go to state 127
    "/"   shift, and go to state 128
    "%"   shift, and go to state 129
    "<"   shift, and go to state 130
    "<="  shift, and go to state 131
    "="   shift, and go to state 132
    "/="  shift, and go to state 133
    ">"   shift, and go to state 134
    ">="  shift, and go to state 135


State 113

   56 statement_list: ";" statement_list .

    $default  reduce using rule 56 (statement_list)


State 114

  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression
  123                 | "-" expression .  [AND, ELSE, ELSIF, END, OR, THEN, WHEN, ")", ",", ";", "+", "-", "*", "/", "%", "<", "<=", "=", "/=", ">", ">=", ":="]

    "."  shift, and go to state 124

    $default  reduce using rule 123 (sugar_expression)

    Conflict between rule 123 and token AND resolved as reduce (AND < UMINUS).
    Conflict between rule 123 and token OR resolved as reduce (OR < UMINUS).
    Conflict between rule 123 and token "." resolved as shift (UMINUS < ".").
    Conflict between rule 123 and token "+" resolved as reduce ("+" < UMINUS).
    Conflict between rule 123 and token "-" resolved as reduce ("-" < UMINUS).
    Conflict between rule 123 and token "*" resolved as reduce ("*" < UMINUS).
    Conflict between rule 123 and token "/" resolved as reduce ("/" < UMINUS).
    Conflict between rule 123 and token "%" resolved as reduce ("%" < UMINUS).
    Conflict between rule 123 and token "<" resolved as reduce ("<" < UMINUS).
    Conflict between rule 123 and token "<=" resolved as reduce ("<=" < UMINUS).
    Conflict between rule 123 and token "=" resolved as reduce ("=" < UMINUS).
    Conflict between rule 123 and token "/=" resolved as reduce ("/=" < UMINUS).
    Conflict between rule 123 and token ">" resolved as reduce (">" < UMINUS).
    Conflict between rule 123 and token ">=" resolved as reduce (">=" < UMINUS).


State 115

  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression
  125                 | "~" expression .  [AND, ELSE, ELSIF, END, OR, THEN, WHEN, ")", ",", ";", "+", "-", "*", "/", "%", "<", "<=", "=", "/=", ">", ">=", ":="]

    "."  shift, and go to state 124

    $default  reduce using rule 125 (sugar_expression)

    Conflict between rule 125 and token AND resolved as reduce (AND < "~").
    Conflict between rule 125 and token OR resolved as reduce (OR < "~").
    Conflict between rule 125 and token "." resolved as shift ("~" < ".").
    Conflict between rule 125 and token "+" resolved as reduce ("+" < "~").
    Conflict between rule 125 and token "-" resolved as reduce ("-" < "~").
    Conflict between rule 125 and token "*" resolved as reduce ("*" < "~").
    Conflict between rule 125 and token "/" resolved as reduce ("/" < "~").
    Conflict between rule 125 and token "%" resolved as reduce ("%" < "~").
    Conflict between rule 125 and token "<" resolved as reduce ("<" < "~").
    Conflict between rule 125 and token "<=" resolved as reduce ("<=" < "~").
    Conflict between rule 125 and token "=" resolved as reduce ("=" < "~").
    Conflict between rule 125 and token "/=" resolved as reduce ("/=" < "~").
    Conflict between rule 125 and token ">" resolved as reduce (">" < "~").
    Conflict between rule 125 and token ">=" resolved as reduce (">=" < "~").


State 116

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  102 expression_list: . expression
  103                | . expression "," expression_list
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  109                  | "#" "(" . expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 161
    expression_list    go to state 162
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 117

  107 create_expression: "#" type_specifier .  [AND, ELSE, ELSIF, END, OR, THEN, WHEN, ")", ",", ".", ";", "+", "-", "*", "/", "%", "<", "<=", "=", "/=", ">", ">=", ":="]
  108                  | "#" type_specifier . "(" expression_list ")"

    "("  shift, and go to state 163

    $default  reduce using rule 107 (create_expression)


State 118

    8 name: . UPCASE_ID
    9     | . ID
   11 routine_argument: identifier_list "," . ID ":" type_specifier
   13 identifier_list: identifier_list "," . name

    ID         shift, and go to state 164
    UPCASE_ID  shift, and go to state 40

    name  go to state 146


State 119

   33 routine_def_public: ID IS statement_list END .

    $default  reduce using rule 33 (routine_def_public)


State 120

    2 semicolon_list: ";" .  [ELSE, ELSIF, END, WHEN]
    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   55 statement_list: . statement
   56               | . ";" statement_list
   57               | . statement semicolon_list
   58               | . statement ";" statement_list
   58               | statement ";" . statement_list
   59 statement: . routine_argument
   60          | . assign_statement
   61          | . if_statement
   62          | . return_statement
   63          | . typecase_statement
   64          | . expression_statement
   65          | . loop_statement
   66          | . yield_statement
   67          | . QUIT
   68 assign_statement: . expression ":=" expression
   69                 | . ID ":" ":=" expression
   70                 | . ID ":" type_specifier ":=" expression
   74 if_statement: . IF expression THEN statement_list END
   75             | . IF expression THEN statement_list elseif_list END
   76             | . IF expression THEN statement_list ELSE statement_list END
   77             | . IF expression THEN statement_list elseif_list ELSE statement_list END
   78 return_statement: . RETURN
   79                 | . RETURN expression
   83 typecase_statement: . TYPECASE ID when_list END
   84                   | . TYPECASE ID when_list ELSE statement_list END
   85 expression_statement: . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression
  126 loop_statement: . LOOP statement_list END
  127 yield_statement: . YIELD
  128                | . YIELD expression

    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    UPCASE_ID  shift, and go to state 40
    INT        shift, and go to state 52
    BOOL       shift, and go to state 53
    CHAR       shift, and go to state 54
    BREAK      shift, and go to state 55
    IF         shift, and go to state 56
    LOOP       shift, and go to state 57
    NEW        shift, and go to state 58
    QUIT       shift, and go to state 59
    RETURN     shift, and go to state 60
    SELF       shift, and go to state 61
    TYPECASE   shift, and go to state 62
    VOID       shift, and go to state 63
    WHILE      shift, and go to state 64
    YIELD      shift, and go to state 65
    "("        shift, and go to state 66
    "-"        shift, and go to state 68
    "~"        shift, and go to state 69
    "#"        shift, and go to state 70

    ";"  error (nonassociative)

    $default  reduce using rule 2 (semicolon_list)

    name                  go to state 41
    routine_argument      go to state 71
    identifier_list       go to state 72
    statement_list        go to state 165
    statement             go to state 74
    assign_statement      go to state 75
    if_statement          go to state 76
    return_statement      go to state 77
    typecase_statement    go to state 78
    expression_statement  go to state 79
    expression            go to state 80
    call_expression       go to state 81
    create_expression     go to state 82
    sugar_expression      go to state 83
    loop_statement        go to state 84
    yield_statement       go to state 85

    Conflict between rule 2 and token ";" resolved as an error (%nonassoc ";").


State 121

    3 semicolon_list: semicolon_list . ";"
   57 statement_list: statement semicolon_list .  [ELSE, ELSIF, END, WHEN]

    ";"  shift, and go to state 166

    $default  reduce using rule 57 (statement_list)


State 122

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  110                 | expression AND . expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 167
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 123

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  111                 | expression OR . expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 168
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 124

  100 call_name: . ID
  101          | . ITER_NAME
  104 call_expression: expression "." . call_name
  105                | expression "." . call_name "(" expression_list ")"

    ID         shift, and go to state 169
    ITER_NAME  shift, and go to state 170

    call_name  go to state 171


State 125

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  112                 | expression "+" . expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 172
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 126

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  113                 | expression "-" . expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 173
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 127

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  114                 | expression "*" . expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 174
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 128

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  115                 | expression "/" . expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 175
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 129

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  116                 | expression "%" . expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 176
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 130

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  117                 | expression "<" . expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 177
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 131

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  118                 | expression "<=" . expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 178
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 132

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  119                 | expression "=" . expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 179
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 133

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  120                 | expression "/=" . expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 180
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 134

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  121                 | expression ">" . expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 181
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 135

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  122                 | expression ">=" . expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 182
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 136

   68 assign_statement: expression ":=" . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 183
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 137

    6 type_specifier: . UPCASE_ID
    7               | . SAME
   10 routine_argument: ID ":" . type_specifier

    UPCASE_ID  shift, and go to state 13
    SAME       shift, and go to state 14

    type_specifier  go to state 184


State 138

   34 routine_def_public: ID "(" routine_arg_list ")" . IS statement_list END
   36                   | ID "(" routine_arg_list ")" . ":" type_specifier IS statement_list END

    IS   shift, and go to state 185
    ":"  shift, and go to state 186


State 139

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   32 routine_arg_list: routine_arg_list "," . routine_argument

    ID         shift, and go to state 86
    UPCASE_ID  shift, and go to state 40

    name              go to state 41
    routine_argument  go to state 187
    identifier_list   go to state 72


State 140

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   35 routine_def_public: ID ":" type_specifier IS . statement_list END
   55 statement_list: . statement
   56               | . ";" statement_list
   57               | . statement semicolon_list
   58               | . statement ";" statement_list
   59 statement: . routine_argument
   60          | . assign_statement
   61          | . if_statement
   62          | . return_statement
   63          | . typecase_statement
   64          | . expression_statement
   65          | . loop_statement
   66          | . yield_statement
   67          | . QUIT
   68 assign_statement: . expression ":=" expression
   69                 | . ID ":" ":=" expression
   70                 | . ID ":" type_specifier ":=" expression
   74 if_statement: . IF expression THEN statement_list END
   75             | . IF expression THEN statement_list elseif_list END
   76             | . IF expression THEN statement_list ELSE statement_list END
   77             | . IF expression THEN statement_list elseif_list ELSE statement_list END
   78 return_statement: . RETURN
   79                 | . RETURN expression
   83 typecase_statement: . TYPECASE ID when_list END
   84                   | . TYPECASE ID when_list ELSE statement_list END
   85 expression_statement: . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression
  126 loop_statement: . LOOP statement_list END
  127 yield_statement: . YIELD
  128                | . YIELD expression

    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    UPCASE_ID  shift, and go to state 40
    INT        shift, and go to state 52
    BOOL       shift, and go to state 53
    CHAR       shift, and go to state 54
    BREAK      shift, and go to state 55
    IF         shift, and go to state 56
    LOOP       shift, and go to state 57
    NEW        shift, and go to state 58
    QUIT       shift, and go to state 59
    RETURN     shift, and go to state 60
    SELF       shift, and go to state 61
    TYPECASE   shift, and go to state 62
    VOID       shift, and go to state 63
    WHILE      shift, and go to state 64
    YIELD      shift, and go to state 65
    "("        shift, and go to state 66
    ";"        shift, and go to state 67
    "-"        shift, and go to state 68
    "~"        shift, and go to state 69
    "#"        shift, and go to state 70

    name                  go to state 41
    routine_argument      go to state 71
    identifier_list       go to state 72
    statement_list        go to state 188
    statement             go to state 74
    assign_statement      go to state 75
    if_statement          go to state 76
    return_statement      go to state 77
    typecase_statement    go to state 78
    expression_statement  go to state 79
    expression            go to state 80
    call_expression       go to state 81
    create_expression     go to state 82
    sugar_expression      go to state 83
    loop_statement        go to state 84
    yield_statement       go to state 85


State 141

   43 iter_definition_public: ITER_NAME IS statement_list END .

    $default  reduce using rule 43 (iter_definition_public)


State 142

   40 iter_argument: ONCE routine_argument .

    $default  reduce using rule 40 (iter_argument)


State 143

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   39 iter_argument: . routine_argument
   40              | . ONCE routine_argument
   41 iter_arg_list: . iter_argument
   42              | . iter_argument "," iter_arg_list
   42              | iter_argument "," . iter_arg_list

    ID         shift, and go to state 86
    UPCASE_ID  shift, and go to state 40
    ONCE       shift, and go to state 91

    name              go to state 41
    routine_argument  go to state 92
    identifier_list   go to state 72
    iter_argument     go to state 93
    iter_arg_list     go to state 189


State 144

   44 iter_definition_public: ITER_NAME "(" iter_arg_list ")" . IS statement_list END
   46                       | ITER_NAME "(" iter_arg_list ")" . ":" type_specifier IS statement_list END

    IS   shift, and go to state 190
    ":"  shift, and go to state 191


State 145

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   45 iter_definition_public: ITER_NAME ":" type_specifier IS . statement_list END
   55 statement_list: . statement
   56               | . ";" statement_list
   57               | . statement semicolon_list
   58               | . statement ";" statement_list
   59 statement: . routine_argument
   60          | . assign_statement
   61          | . if_statement
   62          | . return_statement
   63          | . typecase_statement
   64          | . expression_statement
   65          | . loop_statement
   66          | . yield_statement
   67          | . QUIT
   68 assign_statement: . expression ":=" expression
   69                 | . ID ":" ":=" expression
   70                 | . ID ":" type_specifier ":=" expression
   74 if_statement: . IF expression THEN statement_list END
   75             | . IF expression THEN statement_list elseif_list END
   76             | . IF expression THEN statement_list ELSE statement_list END
   77             | . IF expression THEN statement_list elseif_list ELSE statement_list END
   78 return_statement: . RETURN
   79                 | . RETURN expression
   83 typecase_statement: . TYPECASE ID when_list END
   84                   | . TYPECASE ID when_list ELSE statement_list END
   85 expression_statement: . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression
  126 loop_statement: . LOOP statement_list END
  127 yield_statement: . YIELD
  128                | . YIELD expression

    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    UPCASE_ID  shift, and go to state 40
    INT        shift, and go to state 52
    BOOL       shift, and go to state 53
    CHAR       shift, and go to state 54
    BREAK      shift, and go to state 55
    IF         shift, and go to state 56
    LOOP       shift, and go to state 57
    NEW        shift, and go to state 58
    QUIT       shift, and go to state 59
    RETURN     shift, and go to state 60
    SELF       shift, and go to state 61
    TYPECASE   shift, and go to state 62
    VOID       shift, and go to state 63
    WHILE      shift, and go to state 64
    YIELD      shift, and go to state 65
    "("        shift, and go to state 66
    ";"        shift, and go to state 67
    "-"        shift, and go to state 68
    "~"        shift, and go to state 69
    "#"        shift, and go to state 70

    name                  go to state 41
    routine_argument      go to state 71
    identifier_list       go to state 72
    statement_list        go to state 192
    statement             go to state 74
    assign_statement      go to state 75
    if_statement          go to state 76
    return_statement      go to state 77
    typecase_statement    go to state 78
    expression_statement  go to state 79
    expression            go to state 80
    call_expression       go to state 81
    create_expression     go to state 82
    sugar_expression      go to state 83
    loop_statement        go to state 84
    yield_statement       go to state 85


State 146

   13 identifier_list: identifier_list "," name .

    $default  reduce using rule 13 (identifier_list)


State 147

   30 public_attr_definition: ATTR identifier_list ":" type_specifier .

    $default  reduce using rule 30 (public_attr_definition)


State 148

   49 feature_modifier: ID "-" . ID

    ID  shift, and go to state 193


State 149

   50 feature_modifier: ITER_NAME "-" . ITER_NAME

    ITER_NAME  shift, and go to state 194


State 150

   49 feature_modifier: . ID "-" ID
   50                 | . ITER_NAME "-" ITER_NAME
   51 feature_modifier_list: . feature_modifier
   52                      | . feature_modifier "," feature_modifier_list
   52                      | feature_modifier "," . feature_modifier_list

    ID         shift, and go to state 98
    ITER_NAME  shift, and go to state 99

    feature_modifier       go to state 100
    feature_modifier_list  go to state 195


State 151

   69 assign_statement: ID ":" ":=" . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 196
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 152

   10 routine_argument: ID ":" type_specifier .  [ELSE, ELSIF, END, WHEN, ";"]
   70 assign_statement: ID ":" type_specifier . ":=" expression

    ":="  shift, and go to state 197

    $default  reduce using rule 10 (routine_argument)


State 153

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   55 statement_list: . statement
   56               | . ";" statement_list
   57               | . statement semicolon_list
   58               | . statement ";" statement_list
   59 statement: . routine_argument
   60          | . assign_statement
   61          | . if_statement
   62          | . return_statement
   63          | . typecase_statement
   64          | . expression_statement
   65          | . loop_statement
   66          | . yield_statement
   67          | . QUIT
   68 assign_statement: . expression ":=" expression
   69                 | . ID ":" ":=" expression
   70                 | . ID ":" type_specifier ":=" expression
   74 if_statement: . IF expression THEN statement_list END
   74             | IF expression THEN . statement_list END
   75             | . IF expression THEN statement_list elseif_list END
   75             | IF expression THEN . statement_list elseif_list END
   76             | . IF expression THEN statement_list ELSE statement_list END
   76             | IF expression THEN . statement_list ELSE statement_list END
   77             | . IF expression THEN statement_list elseif_list ELSE statement_list END
   77             | IF expression THEN . statement_list elseif_list ELSE statement_list END
   78 return_statement: . RETURN
   79                 | . RETURN expression
   83 typecase_statement: . TYPECASE ID when_list END
   84                   | . TYPECASE ID when_list ELSE statement_list END
   85 expression_statement: . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression
  126 loop_statement: . LOOP statement_list END
  127 yield_statement: . YIELD
  128                | . YIELD expression

    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    UPCASE_ID  shift, and go to state 40
    INT        shift, and go to state 52
    BOOL       shift, and go to state 53
    CHAR       shift, and go to state 54
    BREAK      shift, and go to state 55
    IF         shift, and go to state 56
    LOOP       shift, and go to state 57
    NEW        shift, and go to state 58
    QUIT       shift, and go to state 59
    RETURN     shift, and go to state 60
    SELF       shift, and go to state 61
    TYPECASE   shift, and go to state 62
    VOID       shift, and go to state 63
    WHILE      shift, and go to state 64
    YIELD      shift, and go to state 65
    "("        shift, and go to state 66
    ";"        shift, and go to state 67
    "-"        shift, and go to state 68
    "~"        shift, and go to state 69
    "#"        shift, and go to state 70

    name                  go to state 41
    routine_argument      go to state 71
    identifier_list       go to state 72
    statement_list        go to state 198
    statement             go to state 74
    assign_statement      go to state 75
    if_statement          go to state 76
    return_statement      go to state 77
    typecase_statement    go to state 78
    expression_statement  go to state 79
    expression            go to state 80
    call_expression       go to state 81
    create_expression     go to state 82
    sugar_expression      go to state 83
    loop_statement        go to state 84
    yield_statement       go to state 85


State 154

  126 loop_statement: LOOP statement_list END .

    $default  reduce using rule 126 (loop_statement)


State 155

    6 type_specifier: . UPCASE_ID
    7               | . SAME
   80 when_expr: WHEN . type_specifier THEN statement_list

    UPCASE_ID  shift, and go to state 13
    SAME       shift, and go to state 14

    type_specifier  go to state 199


State 156

   81 when_list: when_expr .

    $default  reduce using rule 81 (when_list)


State 157

   80 when_expr: . WHEN type_specifier THEN statement_list
   82 when_list: when_list . when_expr
   83 typecase_statement: TYPECASE ID when_list . END
   84                   | TYPECASE ID when_list . ELSE statement_list END

    ELSE  shift, and go to state 200
    END   shift, and go to state 201
    WHEN  shift, and go to state 155

    when_expr  go to state 202


State 158

   94 expression: VOID "(" expression . ")"
  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    AND   shift, and go to state 122
    OR    shift, and go to state 123
    ")"   shift, and go to state 203
    "."   shift, and go to state 124
    "+"   shift, and go to state 125
    "-"   shift, and go to state 126
    "*"   shift, and go to state 127
    "/"   shift, and go to state 128
    "%"   shift, and go to state 129
    "<"   shift, and go to state 130
    "<="  shift, and go to state 131
    "="   shift, and go to state 132
    "/="  shift, and go to state 133
    ">"   shift, and go to state 134
    ">="  shift, and go to state 135


State 159

   98 expression: WHILE "(" expression . ")"
  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    AND   shift, and go to state 122
    OR    shift, and go to state 123
    ")"   shift, and go to state 204
    "."   shift, and go to state 124
    "+"   shift, and go to state 125
    "-"   shift, and go to state 126
    "*"   shift, and go to state 127
    "/"   shift, and go to state 128
    "%"   shift, and go to state 129
    "<"   shift, and go to state 130
    "<="  shift, and go to state 131
    "="   shift, and go to state 132
    "/="  shift, and go to state 133
    ">"   shift, and go to state 134
    ">="  shift, and go to state 135


State 160

  124 sugar_expression: "(" expression ")" .

    $default  reduce using rule 124 (sugar_expression)


State 161

  102 expression_list: expression .  [")"]
  103                | expression . "," expression_list
  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    AND   shift, and go to state 122
    OR    shift, and go to state 123
    ","   shift, and go to state 205
    "."   shift, and go to state 124
    "+"   shift, and go to state 125
    "-"   shift, and go to state 126
    "*"   shift, and go to state 127
    "/"   shift, and go to state 128
    "%"   shift, and go to state 129
    "<"   shift, and go to state 130
    "<="  shift, and go to state 131
    "="   shift, and go to state 132
    "/="  shift, and go to state 133
    ">"   shift, and go to state 134
    ">="  shift, and go to state 135

    $default  reduce using rule 102 (expression_list)


State 162

  109 create_expression: "#" "(" expression_list . ")"

    ")"  shift, and go to state 206


State 163

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  102 expression_list: . expression
  103                | . expression "," expression_list
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  108                  | "#" type_specifier "(" . expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 161
    expression_list    go to state 207
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 164

    9 name: ID .  [","]
   11 routine_argument: identifier_list "," ID . ":" type_specifier

    ":"  shift, and go to state 208

    $default  reduce using rule 9 (name)


State 165

   58 statement_list: statement ";" statement_list .

    $default  reduce using rule 58 (statement_list)


State 166

    3 semicolon_list: semicolon_list ";" .

    $default  reduce using rule 3 (semicolon_list)


State 167

  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  110                 | expression AND expression .  [AND, ELSE, ELSIF, END, OR, THEN, WHEN, ")", ",", ";", ":="]
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    "."   shift, and go to state 124
    "+"   shift, and go to state 125
    "-"   shift, and go to state 126
    "*"   shift, and go to state 127
    "/"   shift, and go to state 128
    "%"   shift, and go to state 129
    "<"   shift, and go to state 130
    "<="  shift, and go to state 131
    "="   shift, and go to state 132
    "/="  shift, and go to state 133
    ">"   shift, and go to state 134
    ">="  shift, and go to state 135

    $default  reduce using rule 110 (sugar_expression)

    Conflict between rule 110 and token AND resolved as reduce (%left AND).
    Conflict between rule 110 and token OR resolved as reduce (%left OR).
    Conflict between rule 110 and token "." resolved as shift (AND < ".").
    Conflict between rule 110 and token "+" resolved as shift (AND < "+").
    Conflict between rule 110 and token "-" resolved as shift (AND < "-").
    Conflict between rule 110 and token "*" resolved as shift (AND < "*").
    Conflict between rule 110 and token "/" resolved as shift (AND < "/").
    Conflict between rule 110 and token "%" resolved as shift (AND < "%").
    Conflict between rule 110 and token "<" resolved as shift (AND < "<").
    Conflict between rule 110 and token "<=" resolved as shift (AND < "<=").
    Conflict between rule 110 and token "=" resolved as shift (AND < "=").
    Conflict between rule 110 and token "/=" resolved as shift (AND < "/=").
    Conflict between rule 110 and token ">" resolved as shift (AND < ">").
    Conflict between rule 110 and token ">=" resolved as shift (AND < ">=").


State 168

  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  111                 | expression OR expression .  [AND, ELSE, ELSIF, END, OR, THEN, WHEN, ")", ",", ";", ":="]
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    "."   shift, and go to state 124
    "+"   shift, and go to state 125
    "-"   shift, and go to state 126
    "*"   shift, and go to state 127
    "/"   shift, and go to state 128
    "%"   shift, and go to state 129
    "<"   shift, and go to state 130
    "<="  shift, and go to state 131
    "="   shift, and go to state 132
    "/="  shift, and go to state 133
    ">"   shift, and go to state 134
    ">="  shift, and go to state 135

    $default  reduce using rule 111 (sugar_expression)

    Conflict between rule 111 and token AND resolved as reduce (%left AND).
    Conflict between rule 111 and token OR resolved as reduce (%left OR).
    Conflict between rule 111 and token "." resolved as shift (OR < ".").
    Conflict between rule 111 and token "+" resolved as shift (OR < "+").
    Conflict between rule 111 and token "-" resolved as shift (OR < "-").
    Conflict between rule 111 and token "*" resolved as shift (OR < "*").
    Conflict between rule 111 and token "/" resolved as shift (OR < "/").
    Conflict between rule 111 and token "%" resolved as shift (OR < "%").
    Conflict between rule 111 and token "<" resolved as shift (OR < "<").
    Conflict between rule 111 and token "<=" resolved as shift (OR < "<=").
    Conflict between rule 111 and token "=" resolved as shift (OR < "=").
    Conflict between rule 111 and token "/=" resolved as shift (OR < "/=").
    Conflict between rule 111 and token ">" resolved as shift (OR < ">").
    Conflict between rule 111 and token ">=" resolved as shift (OR < ">=").


State 169

  100 call_name: ID .

    $default  reduce using rule 100 (call_name)


State 170

  101 call_name: ITER_NAME .

    $default  reduce using rule 101 (call_name)


State 171

  104 call_expression: expression "." call_name .  [AND, ELSE, ELSIF, END, OR, THEN, WHEN, ")", ",", ".", ";", "+", "-", "*", "/", "%", "<", "<=", "=", "/=", ">", ">=", ":="]
  105                | expression "." call_name . "(" expression_list ")"

    "("  shift, and go to state 209

    $default  reduce using rule 104 (call_expression)


State 172

  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  112                 | expression "+" expression .  [AND, ELSE, ELSIF, END, OR, THEN, WHEN, ")", ",", ";", "+", "-", "<", "<=", "=", "/=", ">", ">=", ":="]
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    "."  shift, and go to state 124
    "*"  shift, and go to state 127
    "/"  shift, and go to state 128
    "%"  shift, and go to state 129

    $default  reduce using rule 112 (sugar_expression)

    Conflict between rule 112 and token AND resolved as reduce (AND < "+").
    Conflict between rule 112 and token OR resolved as reduce (OR < "+").
    Conflict between rule 112 and token "." resolved as shift ("+" < ".").
    Conflict between rule 112 and token "+" resolved as reduce (%left "+").
    Conflict between rule 112 and token "-" resolved as reduce (%left "-").
    Conflict between rule 112 and token "*" resolved as shift ("+" < "*").
    Conflict between rule 112 and token "/" resolved as shift ("+" < "/").
    Conflict between rule 112 and token "%" resolved as shift ("+" < "%").
    Conflict between rule 112 and token "<" resolved as reduce ("<" < "+").
    Conflict between rule 112 and token "<=" resolved as reduce ("<=" < "+").
    Conflict between rule 112 and token "=" resolved as reduce ("=" < "+").
    Conflict between rule 112 and token "/=" resolved as reduce ("/=" < "+").
    Conflict between rule 112 and token ">" resolved as reduce (">" < "+").
    Conflict between rule 112 and token ">=" resolved as reduce (">=" < "+").


State 173

  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  113                 | expression "-" expression .  [AND, ELSE, ELSIF, END, OR, THEN, WHEN, ")", ",", ";", "+", "-", "<", "<=", "=", "/=", ">", ">=", ":="]
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    "."  shift, and go to state 124
    "*"  shift, and go to state 127
    "/"  shift, and go to state 128
    "%"  shift, and go to state 129

    $default  reduce using rule 113 (sugar_expression)

    Conflict between rule 113 and token AND resolved as reduce (AND < "-").
    Conflict between rule 113 and token OR resolved as reduce (OR < "-").
    Conflict between rule 113 and token "." resolved as shift ("-" < ".").
    Conflict between rule 113 and token "+" resolved as reduce (%left "+").
    Conflict between rule 113 and token "-" resolved as reduce (%left "-").
    Conflict between rule 113 and token "*" resolved as shift ("-" < "*").
    Conflict between rule 113 and token "/" resolved as shift ("-" < "/").
    Conflict between rule 113 and token "%" resolved as shift ("-" < "%").
    Conflict between rule 113 and token "<" resolved as reduce ("<" < "-").
    Conflict between rule 113 and token "<=" resolved as reduce ("<=" < "-").
    Conflict between rule 113 and token "=" resolved as reduce ("=" < "-").
    Conflict between rule 113 and token "/=" resolved as reduce ("/=" < "-").
    Conflict between rule 113 and token ">" resolved as reduce (">" < "-").
    Conflict between rule 113 and token ">=" resolved as reduce (">=" < "-").


State 174

  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  114                 | expression "*" expression .  [AND, ELSE, ELSIF, END, OR, THEN, WHEN, ")", ",", ";", "+", "-", "*", "/", "%", "<", "<=", "=", "/=", ">", ">=", ":="]
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    "."  shift, and go to state 124

    $default  reduce using rule 114 (sugar_expression)

    Conflict between rule 114 and token AND resolved as reduce (AND < "*").
    Conflict between rule 114 and token OR resolved as reduce (OR < "*").
    Conflict between rule 114 and token "." resolved as shift ("*" < ".").
    Conflict between rule 114 and token "+" resolved as reduce ("+" < "*").
    Conflict between rule 114 and token "-" resolved as reduce ("-" < "*").
    Conflict between rule 114 and token "*" resolved as reduce (%left "*").
    Conflict between rule 114 and token "/" resolved as reduce (%left "/").
    Conflict between rule 114 and token "%" resolved as reduce (%left "%").
    Conflict between rule 114 and token "<" resolved as reduce ("<" < "*").
    Conflict between rule 114 and token "<=" resolved as reduce ("<=" < "*").
    Conflict between rule 114 and token "=" resolved as reduce ("=" < "*").
    Conflict between rule 114 and token "/=" resolved as reduce ("/=" < "*").
    Conflict between rule 114 and token ">" resolved as reduce (">" < "*").
    Conflict between rule 114 and token ">=" resolved as reduce (">=" < "*").


State 175

  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  115                 | expression "/" expression .  [AND, ELSE, ELSIF, END, OR, THEN, WHEN, ")", ",", ";", "+", "-", "*", "/", "%", "<", "<=", "=", "/=", ">", ">=", ":="]
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    "."  shift, and go to state 124

    $default  reduce using rule 115 (sugar_expression)

    Conflict between rule 115 and token AND resolved as reduce (AND < "/").
    Conflict between rule 115 and token OR resolved as reduce (OR < "/").
    Conflict between rule 115 and token "." resolved as shift ("/" < ".").
    Conflict between rule 115 and token "+" resolved as reduce ("+" < "/").
    Conflict between rule 115 and token "-" resolved as reduce ("-" < "/").
    Conflict between rule 115 and token "*" resolved as reduce (%left "*").
    Conflict between rule 115 and token "/" resolved as reduce (%left "/").
    Conflict between rule 115 and token "%" resolved as reduce (%left "%").
    Conflict between rule 115 and token "<" resolved as reduce ("<" < "/").
    Conflict between rule 115 and token "<=" resolved as reduce ("<=" < "/").
    Conflict between rule 115 and token "=" resolved as reduce ("=" < "/").
    Conflict between rule 115 and token "/=" resolved as reduce ("/=" < "/").
    Conflict between rule 115 and token ">" resolved as reduce (">" < "/").
    Conflict between rule 115 and token ">=" resolved as reduce (">=" < "/").


State 176

  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  116                 | expression "%" expression .  [AND, ELSE, ELSIF, END, OR, THEN, WHEN, ")", ",", ";", "+", "-", "*", "/", "%", "<", "<=", "=", "/=", ">", ">=", ":="]
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    "."  shift, and go to state 124

    $default  reduce using rule 116 (sugar_expression)

    Conflict between rule 116 and token AND resolved as reduce (AND < "%").
    Conflict between rule 116 and token OR resolved as reduce (OR < "%").
    Conflict between rule 116 and token "." resolved as shift ("%" < ".").
    Conflict between rule 116 and token "+" resolved as reduce ("+" < "%").
    Conflict between rule 116 and token "-" resolved as reduce ("-" < "%").
    Conflict between rule 116 and token "*" resolved as reduce (%left "*").
    Conflict between rule 116 and token "/" resolved as reduce (%left "/").
    Conflict between rule 116 and token "%" resolved as reduce (%left "%").
    Conflict between rule 116 and token "<" resolved as reduce ("<" < "%").
    Conflict between rule 116 and token "<=" resolved as reduce ("<=" < "%").
    Conflict between rule 116 and token "=" resolved as reduce ("=" < "%").
    Conflict between rule 116 and token "/=" resolved as reduce ("/=" < "%").
    Conflict between rule 116 and token ">" resolved as reduce (">" < "%").
    Conflict between rule 116 and token ">=" resolved as reduce (">=" < "%").


State 177

  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  117                 | expression "<" expression .  [AND, ELSE, ELSIF, END, OR, THEN, WHEN, ")", ",", ";", "<", "<=", "=", "/=", ">", ">=", ":="]
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    "."  shift, and go to state 124
    "+"  shift, and go to state 125
    "-"  shift, and go to state 126
    "*"  shift, and go to state 127
    "/"  shift, and go to state 128
    "%"  shift, and go to state 129

    $default  reduce using rule 117 (sugar_expression)

    Conflict between rule 117 and token AND resolved as reduce (AND < "<").
    Conflict between rule 117 and token OR resolved as reduce (OR < "<").
    Conflict between rule 117 and token "." resolved as shift ("<" < ".").
    Conflict between rule 117 and token "+" resolved as shift ("<" < "+").
    Conflict between rule 117 and token "-" resolved as shift ("<" < "-").
    Conflict between rule 117 and token "*" resolved as shift ("<" < "*").
    Conflict between rule 117 and token "/" resolved as shift ("<" < "/").
    Conflict between rule 117 and token "%" resolved as shift ("<" < "%").
    Conflict between rule 117 and token "<" resolved as reduce (%left "<").
    Conflict between rule 117 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 117 and token "=" resolved as reduce (%left "=").
    Conflict between rule 117 and token "/=" resolved as reduce (%left "/=").
    Conflict between rule 117 and token ">" resolved as reduce (%left ">").
    Conflict between rule 117 and token ">=" resolved as reduce (%left ">=").


State 178

  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  118                 | expression "<=" expression .  [AND, ELSE, ELSIF, END, OR, THEN, WHEN, ")", ",", ";", "<", "<=", "=", "/=", ">", ">=", ":="]
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    "."  shift, and go to state 124
    "+"  shift, and go to state 125
    "-"  shift, and go to state 126
    "*"  shift, and go to state 127
    "/"  shift, and go to state 128
    "%"  shift, and go to state 129

    $default  reduce using rule 118 (sugar_expression)

    Conflict between rule 118 and token AND resolved as reduce (AND < "<=").
    Conflict between rule 118 and token OR resolved as reduce (OR < "<=").
    Conflict between rule 118 and token "." resolved as shift ("<=" < ".").
    Conflict between rule 118 and token "+" resolved as shift ("<=" < "+").
    Conflict between rule 118 and token "-" resolved as shift ("<=" < "-").
    Conflict between rule 118 and token "*" resolved as shift ("<=" < "*").
    Conflict between rule 118 and token "/" resolved as shift ("<=" < "/").
    Conflict between rule 118 and token "%" resolved as shift ("<=" < "%").
    Conflict between rule 118 and token "<" resolved as reduce (%left "<").
    Conflict between rule 118 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 118 and token "=" resolved as reduce (%left "=").
    Conflict between rule 118 and token "/=" resolved as reduce (%left "/=").
    Conflict between rule 118 and token ">" resolved as reduce (%left ">").
    Conflict between rule 118 and token ">=" resolved as reduce (%left ">=").


State 179

  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  119                 | expression "=" expression .  [AND, ELSE, ELSIF, END, OR, THEN, WHEN, ")", ",", ";", "<", "<=", "=", "/=", ">", ">=", ":="]
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    "."  shift, and go to state 124
    "+"  shift, and go to state 125
    "-"  shift, and go to state 126
    "*"  shift, and go to state 127
    "/"  shift, and go to state 128
    "%"  shift, and go to state 129

    $default  reduce using rule 119 (sugar_expression)

    Conflict between rule 119 and token AND resolved as reduce (AND < "=").
    Conflict between rule 119 and token OR resolved as reduce (OR < "=").
    Conflict between rule 119 and token "." resolved as shift ("=" < ".").
    Conflict between rule 119 and token "+" resolved as shift ("=" < "+").
    Conflict between rule 119 and token "-" resolved as shift ("=" < "-").
    Conflict between rule 119 and token "*" resolved as shift ("=" < "*").
    Conflict between rule 119 and token "/" resolved as shift ("=" < "/").
    Conflict between rule 119 and token "%" resolved as shift ("=" < "%").
    Conflict between rule 119 and token "<" resolved as reduce (%left "<").
    Conflict between rule 119 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 119 and token "=" resolved as reduce (%left "=").
    Conflict between rule 119 and token "/=" resolved as reduce (%left "/=").
    Conflict between rule 119 and token ">" resolved as reduce (%left ">").
    Conflict between rule 119 and token ">=" resolved as reduce (%left ">=").


State 180

  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  120                 | expression "/=" expression .  [AND, ELSE, ELSIF, END, OR, THEN, WHEN, ")", ",", ";", "<", "<=", "=", "/=", ">", ">=", ":="]
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    "."  shift, and go to state 124
    "+"  shift, and go to state 125
    "-"  shift, and go to state 126
    "*"  shift, and go to state 127
    "/"  shift, and go to state 128
    "%"  shift, and go to state 129

    $default  reduce using rule 120 (sugar_expression)

    Conflict between rule 120 and token AND resolved as reduce (AND < "/=").
    Conflict between rule 120 and token OR resolved as reduce (OR < "/=").
    Conflict between rule 120 and token "." resolved as shift ("/=" < ".").
    Conflict between rule 120 and token "+" resolved as shift ("/=" < "+").
    Conflict between rule 120 and token "-" resolved as shift ("/=" < "-").
    Conflict between rule 120 and token "*" resolved as shift ("/=" < "*").
    Conflict between rule 120 and token "/" resolved as shift ("/=" < "/").
    Conflict between rule 120 and token "%" resolved as shift ("/=" < "%").
    Conflict between rule 120 and token "<" resolved as reduce (%left "<").
    Conflict between rule 120 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 120 and token "=" resolved as reduce (%left "=").
    Conflict between rule 120 and token "/=" resolved as reduce (%left "/=").
    Conflict between rule 120 and token ">" resolved as reduce (%left ">").
    Conflict between rule 120 and token ">=" resolved as reduce (%left ">=").


State 181

  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  121                 | expression ">" expression .  [AND, ELSE, ELSIF, END, OR, THEN, WHEN, ")", ",", ";", "<", "<=", "=", "/=", ">", ">=", ":="]
  122                 | expression . ">=" expression

    "."  shift, and go to state 124
    "+"  shift, and go to state 125
    "-"  shift, and go to state 126
    "*"  shift, and go to state 127
    "/"  shift, and go to state 128
    "%"  shift, and go to state 129

    $default  reduce using rule 121 (sugar_expression)

    Conflict between rule 121 and token AND resolved as reduce (AND < ">").
    Conflict between rule 121 and token OR resolved as reduce (OR < ">").
    Conflict between rule 121 and token "." resolved as shift (">" < ".").
    Conflict between rule 121 and token "+" resolved as shift (">" < "+").
    Conflict between rule 121 and token "-" resolved as shift (">" < "-").
    Conflict between rule 121 and token "*" resolved as shift (">" < "*").
    Conflict between rule 121 and token "/" resolved as shift (">" < "/").
    Conflict between rule 121 and token "%" resolved as shift (">" < "%").
    Conflict between rule 121 and token "<" resolved as reduce (%left "<").
    Conflict between rule 121 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 121 and token "=" resolved as reduce (%left "=").
    Conflict between rule 121 and token "/=" resolved as reduce (%left "/=").
    Conflict between rule 121 and token ">" resolved as reduce (%left ">").
    Conflict between rule 121 and token ">=" resolved as reduce (%left ">=").


State 182

  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression
  122                 | expression ">=" expression .  [AND, ELSE, ELSIF, END, OR, THEN, WHEN, ")", ",", ";", "<", "<=", "=", "/=", ">", ">=", ":="]

    "."  shift, and go to state 124
    "+"  shift, and go to state 125
    "-"  shift, and go to state 126
    "*"  shift, and go to state 127
    "/"  shift, and go to state 128
    "%"  shift, and go to state 129

    $default  reduce using rule 122 (sugar_expression)

    Conflict between rule 122 and token AND resolved as reduce (AND < ">=").
    Conflict between rule 122 and token OR resolved as reduce (OR < ">=").
    Conflict between rule 122 and token "." resolved as shift (">=" < ".").
    Conflict between rule 122 and token "+" resolved as shift (">=" < "+").
    Conflict between rule 122 and token "-" resolved as shift (">=" < "-").
    Conflict between rule 122 and token "*" resolved as shift (">=" < "*").
    Conflict between rule 122 and token "/" resolved as shift (">=" < "/").
    Conflict between rule 122 and token "%" resolved as shift (">=" < "%").
    Conflict between rule 122 and token "<" resolved as reduce (%left "<").
    Conflict between rule 122 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 122 and token "=" resolved as reduce (%left "=").
    Conflict between rule 122 and token "/=" resolved as reduce (%left "/=").
    Conflict between rule 122 and token ">" resolved as reduce (%left ">").
    Conflict between rule 122 and token ">=" resolved as reduce (%left ">=").


State 183

   68 assign_statement: expression ":=" expression .  [ELSE, ELSIF, END, WHEN, ";"]
  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    AND   shift, and go to state 122
    OR    shift, and go to state 123
    "."   shift, and go to state 124
    "+"   shift, and go to state 125
    "-"   shift, and go to state 126
    "*"   shift, and go to state 127
    "/"   shift, and go to state 128
    "%"   shift, and go to state 129
    "<"   shift, and go to state 130
    "<="  shift, and go to state 131
    "="   shift, and go to state 132
    "/="  shift, and go to state 133
    ">"   shift, and go to state 134
    ">="  shift, and go to state 135

    $default  reduce using rule 68 (assign_statement)


State 184

   10 routine_argument: ID ":" type_specifier .

    $default  reduce using rule 10 (routine_argument)


State 185

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   34 routine_def_public: ID "(" routine_arg_list ")" IS . statement_list END
   55 statement_list: . statement
   56               | . ";" statement_list
   57               | . statement semicolon_list
   58               | . statement ";" statement_list
   59 statement: . routine_argument
   60          | . assign_statement
   61          | . if_statement
   62          | . return_statement
   63          | . typecase_statement
   64          | . expression_statement
   65          | . loop_statement
   66          | . yield_statement
   67          | . QUIT
   68 assign_statement: . expression ":=" expression
   69                 | . ID ":" ":=" expression
   70                 | . ID ":" type_specifier ":=" expression
   74 if_statement: . IF expression THEN statement_list END
   75             | . IF expression THEN statement_list elseif_list END
   76             | . IF expression THEN statement_list ELSE statement_list END
   77             | . IF expression THEN statement_list elseif_list ELSE statement_list END
   78 return_statement: . RETURN
   79                 | . RETURN expression
   83 typecase_statement: . TYPECASE ID when_list END
   84                   | . TYPECASE ID when_list ELSE statement_list END
   85 expression_statement: . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression
  126 loop_statement: . LOOP statement_list END
  127 yield_statement: . YIELD
  128                | . YIELD expression

    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    UPCASE_ID  shift, and go to state 40
    INT        shift, and go to state 52
    BOOL       shift, and go to state 53
    CHAR       shift, and go to state 54
    BREAK      shift, and go to state 55
    IF         shift, and go to state 56
    LOOP       shift, and go to state 57
    NEW        shift, and go to state 58
    QUIT       shift, and go to state 59
    RETURN     shift, and go to state 60
    SELF       shift, and go to state 61
    TYPECASE   shift, and go to state 62
    VOID       shift, and go to state 63
    WHILE      shift, and go to state 64
    YIELD      shift, and go to state 65
    "("        shift, and go to state 66
    ";"        shift, and go to state 67
    "-"        shift, and go to state 68
    "~"        shift, and go to state 69
    "#"        shift, and go to state 70

    name                  go to state 41
    routine_argument      go to state 71
    identifier_list       go to state 72
    statement_list        go to state 210
    statement             go to state 74
    assign_statement      go to state 75
    if_statement          go to state 76
    return_statement      go to state 77
    typecase_statement    go to state 78
    expression_statement  go to state 79
    expression            go to state 80
    call_expression       go to state 81
    create_expression     go to state 82
    sugar_expression      go to state 83
    loop_statement        go to state 84
    yield_statement       go to state 85


State 186

    6 type_specifier: . UPCASE_ID
    7               | . SAME
   36 routine_def_public: ID "(" routine_arg_list ")" ":" . type_specifier IS statement_list END

    UPCASE_ID  shift, and go to state 13
    SAME       shift, and go to state 14

    type_specifier  go to state 211


State 187

   32 routine_arg_list: routine_arg_list "," routine_argument .

    $default  reduce using rule 32 (routine_arg_list)


State 188

   35 routine_def_public: ID ":" type_specifier IS statement_list . END

    END  shift, and go to state 212


State 189

   42 iter_arg_list: iter_argument "," iter_arg_list .

    $default  reduce using rule 42 (iter_arg_list)


State 190

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   44 iter_definition_public: ITER_NAME "(" iter_arg_list ")" IS . statement_list END
   55 statement_list: . statement
   56               | . ";" statement_list
   57               | . statement semicolon_list
   58               | . statement ";" statement_list
   59 statement: . routine_argument
   60          | . assign_statement
   61          | . if_statement
   62          | . return_statement
   63          | . typecase_statement
   64          | . expression_statement
   65          | . loop_statement
   66          | . yield_statement
   67          | . QUIT
   68 assign_statement: . expression ":=" expression
   69                 | . ID ":" ":=" expression
   70                 | . ID ":" type_specifier ":=" expression
   74 if_statement: . IF expression THEN statement_list END
   75             | . IF expression THEN statement_list elseif_list END
   76             | . IF expression THEN statement_list ELSE statement_list END
   77             | . IF expression THEN statement_list elseif_list ELSE statement_list END
   78 return_statement: . RETURN
   79                 | . RETURN expression
   83 typecase_statement: . TYPECASE ID when_list END
   84                   | . TYPECASE ID when_list ELSE statement_list END
   85 expression_statement: . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression
  126 loop_statement: . LOOP statement_list END
  127 yield_statement: . YIELD
  128                | . YIELD expression

    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    UPCASE_ID  shift, and go to state 40
    INT        shift, and go to state 52
    BOOL       shift, and go to state 53
    CHAR       shift, and go to state 54
    BREAK      shift, and go to state 55
    IF         shift, and go to state 56
    LOOP       shift, and go to state 57
    NEW        shift, and go to state 58
    QUIT       shift, and go to state 59
    RETURN     shift, and go to state 60
    SELF       shift, and go to state 61
    TYPECASE   shift, and go to state 62
    VOID       shift, and go to state 63
    WHILE      shift, and go to state 64
    YIELD      shift, and go to state 65
    "("        shift, and go to state 66
    ";"        shift, and go to state 67
    "-"        shift, and go to state 68
    "~"        shift, and go to state 69
    "#"        shift, and go to state 70

    name                  go to state 41
    routine_argument      go to state 71
    identifier_list       go to state 72
    statement_list        go to state 213
    statement             go to state 74
    assign_statement      go to state 75
    if_statement          go to state 76
    return_statement      go to state 77
    typecase_statement    go to state 78
    expression_statement  go to state 79
    expression            go to state 80
    call_expression       go to state 81
    create_expression     go to state 82
    sugar_expression      go to state 83
    loop_statement        go to state 84
    yield_statement       go to state 85


State 191

    6 type_specifier: . UPCASE_ID
    7               | . SAME
   46 iter_definition_public: ITER_NAME "(" iter_arg_list ")" ":" . type_specifier IS statement_list END

    UPCASE_ID  shift, and go to state 13
    SAME       shift, and go to state 14

    type_specifier  go to state 214


State 192

   45 iter_definition_public: ITER_NAME ":" type_specifier IS statement_list . END

    END  shift, and go to state 215


State 193

   49 feature_modifier: ID "-" ID .

    $default  reduce using rule 49 (feature_modifier)


State 194

   50 feature_modifier: ITER_NAME "-" ITER_NAME .

    $default  reduce using rule 50 (feature_modifier)


State 195

   52 feature_modifier_list: feature_modifier "," feature_modifier_list .

    $default  reduce using rule 52 (feature_modifier_list)


State 196

   69 assign_statement: ID ":" ":=" expression .  [ELSE, ELSIF, END, WHEN, ";"]
  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    AND   shift, and go to state 122
    OR    shift, and go to state 123
    "."   shift, and go to state 124
    "+"   shift, and go to state 125
    "-"   shift, and go to state 126
    "*"   shift, and go to state 127
    "/"   shift, and go to state 128
    "%"   shift, and go to state 129
    "<"   shift, and go to state 130
    "<="  shift, and go to state 131
    "="   shift, and go to state 132
    "/="  shift, and go to state 133
    ">"   shift, and go to state 134
    ">="  shift, and go to state 135

    $default  reduce using rule 69 (assign_statement)


State 197

   70 assign_statement: ID ":" type_specifier ":=" . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 216
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 198

   71 elseif_expre: . ELSIF expression THEN statement_list
   72 elseif_list: . elseif_expre
   73            | . elseif_expre elseif_list
   74 if_statement: IF expression THEN statement_list . END
   75             | IF expression THEN statement_list . elseif_list END
   76             | IF expression THEN statement_list . ELSE statement_list END
   77             | IF expression THEN statement_list . elseif_list ELSE statement_list END

    ELSE   shift, and go to state 217
    ELSIF  shift, and go to state 218
    END    shift, and go to state 219

    elseif_expre  go to state 220
    elseif_list   go to state 221


State 199

   80 when_expr: WHEN type_specifier . THEN statement_list

    THEN  shift, and go to state 222


State 200

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   55 statement_list: . statement
   56               | . ";" statement_list
   57               | . statement semicolon_list
   58               | . statement ";" statement_list
   59 statement: . routine_argument
   60          | . assign_statement
   61          | . if_statement
   62          | . return_statement
   63          | . typecase_statement
   64          | . expression_statement
   65          | . loop_statement
   66          | . yield_statement
   67          | . QUIT
   68 assign_statement: . expression ":=" expression
   69                 | . ID ":" ":=" expression
   70                 | . ID ":" type_specifier ":=" expression
   74 if_statement: . IF expression THEN statement_list END
   75             | . IF expression THEN statement_list elseif_list END
   76             | . IF expression THEN statement_list ELSE statement_list END
   77             | . IF expression THEN statement_list elseif_list ELSE statement_list END
   78 return_statement: . RETURN
   79                 | . RETURN expression
   83 typecase_statement: . TYPECASE ID when_list END
   84                   | . TYPECASE ID when_list ELSE statement_list END
   84                   | TYPECASE ID when_list ELSE . statement_list END
   85 expression_statement: . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression
  126 loop_statement: . LOOP statement_list END
  127 yield_statement: . YIELD
  128                | . YIELD expression

    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    UPCASE_ID  shift, and go to state 40
    INT        shift, and go to state 52
    BOOL       shift, and go to state 53
    CHAR       shift, and go to state 54
    BREAK      shift, and go to state 55
    IF         shift, and go to state 56
    LOOP       shift, and go to state 57
    NEW        shift, and go to state 58
    QUIT       shift, and go to state 59
    RETURN     shift, and go to state 60
    SELF       shift, and go to state 61
    TYPECASE   shift, and go to state 62
    VOID       shift, and go to state 63
    WHILE      shift, and go to state 64
    YIELD      shift, and go to state 65
    "("        shift, and go to state 66
    ";"        shift, and go to state 67
    "-"        shift, and go to state 68
    "~"        shift, and go to state 69
    "#"        shift, and go to state 70

    name                  go to state 41
    routine_argument      go to state 71
    identifier_list       go to state 72
    statement_list        go to state 223
    statement             go to state 74
    assign_statement      go to state 75
    if_statement          go to state 76
    return_statement      go to state 77
    typecase_statement    go to state 78
    expression_statement  go to state 79
    expression            go to state 80
    call_expression       go to state 81
    create_expression     go to state 82
    sugar_expression      go to state 83
    loop_statement        go to state 84
    yield_statement       go to state 85


State 201

   83 typecase_statement: TYPECASE ID when_list END .

    $default  reduce using rule 83 (typecase_statement)


State 202

   82 when_list: when_list when_expr .

    $default  reduce using rule 82 (when_list)


State 203

   94 expression: VOID "(" expression ")" .

    $default  reduce using rule 94 (expression)


State 204

   98 expression: WHILE "(" expression ")" .

    $default  reduce using rule 98 (expression)


State 205

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  102 expression_list: . expression
  103                | . expression "," expression_list
  103                | expression "," . expression_list
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 161
    expression_list    go to state 224
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 206

  109 create_expression: "#" "(" expression_list ")" .

    $default  reduce using rule 109 (create_expression)


State 207

  108 create_expression: "#" type_specifier "(" expression_list . ")"

    ")"  shift, and go to state 225


State 208

    6 type_specifier: . UPCASE_ID
    7               | . SAME
   11 routine_argument: identifier_list "," ID ":" . type_specifier

    UPCASE_ID  shift, and go to state 13
    SAME       shift, and go to state 14

    type_specifier  go to state 226


State 209

   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  102 expression_list: . expression
  103                | . expression "," expression_list
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  105                | expression "." call_name "(" . expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 161
    expression_list    go to state 227
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 210

   34 routine_def_public: ID "(" routine_arg_list ")" IS statement_list . END

    END  shift, and go to state 228


State 211

   36 routine_def_public: ID "(" routine_arg_list ")" ":" type_specifier . IS statement_list END

    IS  shift, and go to state 229


State 212

   35 routine_def_public: ID ":" type_specifier IS statement_list END .

    $default  reduce using rule 35 (routine_def_public)


State 213

   44 iter_definition_public: ITER_NAME "(" iter_arg_list ")" IS statement_list . END

    END  shift, and go to state 230


State 214

   46 iter_definition_public: ITER_NAME "(" iter_arg_list ")" ":" type_specifier . IS statement_list END

    IS  shift, and go to state 231


State 215

   45 iter_definition_public: ITER_NAME ":" type_specifier IS statement_list END .

    $default  reduce using rule 45 (iter_definition_public)


State 216

   70 assign_statement: ID ":" type_specifier ":=" expression .  [ELSE, ELSIF, END, WHEN, ";"]
  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    AND   shift, and go to state 122
    OR    shift, and go to state 123
    "."   shift, and go to state 124
    "+"   shift, and go to state 125
    "-"   shift, and go to state 126
    "*"   shift, and go to state 127
    "/"   shift, and go to state 128
    "%"   shift, and go to state 129
    "<"   shift, and go to state 130
    "<="  shift, and go to state 131
    "="   shift, and go to state 132
    "/="  shift, and go to state 133
    ">"   shift, and go to state 134
    ">="  shift, and go to state 135

    $default  reduce using rule 70 (assign_statement)


State 217

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   55 statement_list: . statement
   56               | . ";" statement_list
   57               | . statement semicolon_list
   58               | . statement ";" statement_list
   59 statement: . routine_argument
   60          | . assign_statement
   61          | . if_statement
   62          | . return_statement
   63          | . typecase_statement
   64          | . expression_statement
   65          | . loop_statement
   66          | . yield_statement
   67          | . QUIT
   68 assign_statement: . expression ":=" expression
   69                 | . ID ":" ":=" expression
   70                 | . ID ":" type_specifier ":=" expression
   74 if_statement: . IF expression THEN statement_list END
   75             | . IF expression THEN statement_list elseif_list END
   76             | . IF expression THEN statement_list ELSE statement_list END
   76             | IF expression THEN statement_list ELSE . statement_list END
   77             | . IF expression THEN statement_list elseif_list ELSE statement_list END
   78 return_statement: . RETURN
   79                 | . RETURN expression
   83 typecase_statement: . TYPECASE ID when_list END
   84                   | . TYPECASE ID when_list ELSE statement_list END
   85 expression_statement: . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression
  126 loop_statement: . LOOP statement_list END
  127 yield_statement: . YIELD
  128                | . YIELD expression

    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    UPCASE_ID  shift, and go to state 40
    INT        shift, and go to state 52
    BOOL       shift, and go to state 53
    CHAR       shift, and go to state 54
    BREAK      shift, and go to state 55
    IF         shift, and go to state 56
    LOOP       shift, and go to state 57
    NEW        shift, and go to state 58
    QUIT       shift, and go to state 59
    RETURN     shift, and go to state 60
    SELF       shift, and go to state 61
    TYPECASE   shift, and go to state 62
    VOID       shift, and go to state 63
    WHILE      shift, and go to state 64
    YIELD      shift, and go to state 65
    "("        shift, and go to state 66
    ";"        shift, and go to state 67
    "-"        shift, and go to state 68
    "~"        shift, and go to state 69
    "#"        shift, and go to state 70

    name                  go to state 41
    routine_argument      go to state 71
    identifier_list       go to state 72
    statement_list        go to state 232
    statement             go to state 74
    assign_statement      go to state 75
    if_statement          go to state 76
    return_statement      go to state 77
    typecase_statement    go to state 78
    expression_statement  go to state 79
    expression            go to state 80
    call_expression       go to state 81
    create_expression     go to state 82
    sugar_expression      go to state 83
    loop_statement        go to state 84
    yield_statement       go to state 85


State 218

   71 elseif_expre: ELSIF . expression THEN statement_list
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression

    ID      shift, and go to state 104
    STRING  shift, and go to state 51
    INT     shift, and go to state 52
    BOOL    shift, and go to state 53
    CHAR    shift, and go to state 54
    BREAK   shift, and go to state 55
    NEW     shift, and go to state 58
    SELF    shift, and go to state 61
    VOID    shift, and go to state 63
    WHILE   shift, and go to state 64
    "("     shift, and go to state 66
    "-"     shift, and go to state 68
    "~"     shift, and go to state 69
    "#"     shift, and go to state 70

    expression         go to state 233
    call_expression    go to state 81
    create_expression  go to state 82
    sugar_expression   go to state 83


State 219

   74 if_statement: IF expression THEN statement_list END .

    $default  reduce using rule 74 (if_statement)


State 220

   71 elseif_expre: . ELSIF expression THEN statement_list
   72 elseif_list: . elseif_expre
   72            | elseif_expre .  [ELSE, END]
   73            | . elseif_expre elseif_list
   73            | elseif_expre . elseif_list

    ELSIF  shift, and go to state 218

    $default  reduce using rule 72 (elseif_list)

    elseif_expre  go to state 220
    elseif_list   go to state 234


State 221

   75 if_statement: IF expression THEN statement_list elseif_list . END
   77             | IF expression THEN statement_list elseif_list . ELSE statement_list END

    ELSE  shift, and go to state 235
    END   shift, and go to state 236


State 222

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   55 statement_list: . statement
   56               | . ";" statement_list
   57               | . statement semicolon_list
   58               | . statement ";" statement_list
   59 statement: . routine_argument
   60          | . assign_statement
   61          | . if_statement
   62          | . return_statement
   63          | . typecase_statement
   64          | . expression_statement
   65          | . loop_statement
   66          | . yield_statement
   67          | . QUIT
   68 assign_statement: . expression ":=" expression
   69                 | . ID ":" ":=" expression
   70                 | . ID ":" type_specifier ":=" expression
   74 if_statement: . IF expression THEN statement_list END
   75             | . IF expression THEN statement_list elseif_list END
   76             | . IF expression THEN statement_list ELSE statement_list END
   77             | . IF expression THEN statement_list elseif_list ELSE statement_list END
   78 return_statement: . RETURN
   79                 | . RETURN expression
   80 when_expr: WHEN type_specifier THEN . statement_list
   83 typecase_statement: . TYPECASE ID when_list END
   84                   | . TYPECASE ID when_list ELSE statement_list END
   85 expression_statement: . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression
  126 loop_statement: . LOOP statement_list END
  127 yield_statement: . YIELD
  128                | . YIELD expression

    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    UPCASE_ID  shift, and go to state 40
    INT        shift, and go to state 52
    BOOL       shift, and go to state 53
    CHAR       shift, and go to state 54
    BREAK      shift, and go to state 55
    IF         shift, and go to state 56
    LOOP       shift, and go to state 57
    NEW        shift, and go to state 58
    QUIT       shift, and go to state 59
    RETURN     shift, and go to state 60
    SELF       shift, and go to state 61
    TYPECASE   shift, and go to state 62
    VOID       shift, and go to state 63
    WHILE      shift, and go to state 64
    YIELD      shift, and go to state 65
    "("        shift, and go to state 66
    ";"        shift, and go to state 67
    "-"        shift, and go to state 68
    "~"        shift, and go to state 69
    "#"        shift, and go to state 70

    name                  go to state 41
    routine_argument      go to state 71
    identifier_list       go to state 72
    statement_list        go to state 237
    statement             go to state 74
    assign_statement      go to state 75
    if_statement          go to state 76
    return_statement      go to state 77
    typecase_statement    go to state 78
    expression_statement  go to state 79
    expression            go to state 80
    call_expression       go to state 81
    create_expression     go to state 82
    sugar_expression      go to state 83
    loop_statement        go to state 84
    yield_statement       go to state 85


State 223

   84 typecase_statement: TYPECASE ID when_list ELSE statement_list . END

    END  shift, and go to state 238


State 224

  103 expression_list: expression "," expression_list .

    $default  reduce using rule 103 (expression_list)


State 225

  108 create_expression: "#" type_specifier "(" expression_list ")" .

    $default  reduce using rule 108 (create_expression)


State 226

   11 routine_argument: identifier_list "," ID ":" type_specifier .

    $default  reduce using rule 11 (routine_argument)


State 227

  105 call_expression: expression "." call_name "(" expression_list . ")"

    ")"  shift, and go to state 239


State 228

   34 routine_def_public: ID "(" routine_arg_list ")" IS statement_list END .

    $default  reduce using rule 34 (routine_def_public)


State 229

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   36 routine_def_public: ID "(" routine_arg_list ")" ":" type_specifier IS . statement_list END
   55 statement_list: . statement
   56               | . ";" statement_list
   57               | . statement semicolon_list
   58               | . statement ";" statement_list
   59 statement: . routine_argument
   60          | . assign_statement
   61          | . if_statement
   62          | . return_statement
   63          | . typecase_statement
   64          | . expression_statement
   65          | . loop_statement
   66          | . yield_statement
   67          | . QUIT
   68 assign_statement: . expression ":=" expression
   69                 | . ID ":" ":=" expression
   70                 | . ID ":" type_specifier ":=" expression
   74 if_statement: . IF expression THEN statement_list END
   75             | . IF expression THEN statement_list elseif_list END
   76             | . IF expression THEN statement_list ELSE statement_list END
   77             | . IF expression THEN statement_list elseif_list ELSE statement_list END
   78 return_statement: . RETURN
   79                 | . RETURN expression
   83 typecase_statement: . TYPECASE ID when_list END
   84                   | . TYPECASE ID when_list ELSE statement_list END
   85 expression_statement: . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression
  126 loop_statement: . LOOP statement_list END
  127 yield_statement: . YIELD
  128                | . YIELD expression

    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    UPCASE_ID  shift, and go to state 40
    INT        shift, and go to state 52
    BOOL       shift, and go to state 53
    CHAR       shift, and go to state 54
    BREAK      shift, and go to state 55
    IF         shift, and go to state 56
    LOOP       shift, and go to state 57
    NEW        shift, and go to state 58
    QUIT       shift, and go to state 59
    RETURN     shift, and go to state 60
    SELF       shift, and go to state 61
    TYPECASE   shift, and go to state 62
    VOID       shift, and go to state 63
    WHILE      shift, and go to state 64
    YIELD      shift, and go to state 65
    "("        shift, and go to state 66
    ";"        shift, and go to state 67
    "-"        shift, and go to state 68
    "~"        shift, and go to state 69
    "#"        shift, and go to state 70

    name                  go to state 41
    routine_argument      go to state 71
    identifier_list       go to state 72
    statement_list        go to state 240
    statement             go to state 74
    assign_statement      go to state 75
    if_statement          go to state 76
    return_statement      go to state 77
    typecase_statement    go to state 78
    expression_statement  go to state 79
    expression            go to state 80
    call_expression       go to state 81
    create_expression     go to state 82
    sugar_expression      go to state 83
    loop_statement        go to state 84
    yield_statement       go to state 85


State 230

   44 iter_definition_public: ITER_NAME "(" iter_arg_list ")" IS statement_list END .

    $default  reduce using rule 44 (iter_definition_public)


State 231

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   46 iter_definition_public: ITER_NAME "(" iter_arg_list ")" ":" type_specifier IS . statement_list END
   55 statement_list: . statement
   56               | . ";" statement_list
   57               | . statement semicolon_list
   58               | . statement ";" statement_list
   59 statement: . routine_argument
   60          | . assign_statement
   61          | . if_statement
   62          | . return_statement
   63          | . typecase_statement
   64          | . expression_statement
   65          | . loop_statement
   66          | . yield_statement
   67          | . QUIT
   68 assign_statement: . expression ":=" expression
   69                 | . ID ":" ":=" expression
   70                 | . ID ":" type_specifier ":=" expression
   74 if_statement: . IF expression THEN statement_list END
   75             | . IF expression THEN statement_list elseif_list END
   76             | . IF expression THEN statement_list ELSE statement_list END
   77             | . IF expression THEN statement_list elseif_list ELSE statement_list END
   78 return_statement: . RETURN
   79                 | . RETURN expression
   83 typecase_statement: . TYPECASE ID when_list END
   84                   | . TYPECASE ID when_list ELSE statement_list END
   85 expression_statement: . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression
  126 loop_statement: . LOOP statement_list END
  127 yield_statement: . YIELD
  128                | . YIELD expression

    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    UPCASE_ID  shift, and go to state 40
    INT        shift, and go to state 52
    BOOL       shift, and go to state 53
    CHAR       shift, and go to state 54
    BREAK      shift, and go to state 55
    IF         shift, and go to state 56
    LOOP       shift, and go to state 57
    NEW        shift, and go to state 58
    QUIT       shift, and go to state 59
    RETURN     shift, and go to state 60
    SELF       shift, and go to state 61
    TYPECASE   shift, and go to state 62
    VOID       shift, and go to state 63
    WHILE      shift, and go to state 64
    YIELD      shift, and go to state 65
    "("        shift, and go to state 66
    ";"        shift, and go to state 67
    "-"        shift, and go to state 68
    "~"        shift, and go to state 69
    "#"        shift, and go to state 70

    name                  go to state 41
    routine_argument      go to state 71
    identifier_list       go to state 72
    statement_list        go to state 241
    statement             go to state 74
    assign_statement      go to state 75
    if_statement          go to state 76
    return_statement      go to state 77
    typecase_statement    go to state 78
    expression_statement  go to state 79
    expression            go to state 80
    call_expression       go to state 81
    create_expression     go to state 82
    sugar_expression      go to state 83
    loop_statement        go to state 84
    yield_statement       go to state 85


State 232

   76 if_statement: IF expression THEN statement_list ELSE statement_list . END

    END  shift, and go to state 242


State 233

   71 elseif_expre: ELSIF expression . THEN statement_list
  104 call_expression: expression . "." call_name
  105                | expression . "." call_name "(" expression_list ")"
  110 sugar_expression: expression . AND expression
  111                 | expression . OR expression
  112                 | expression . "+" expression
  113                 | expression . "-" expression
  114                 | expression . "*" expression
  115                 | expression . "/" expression
  116                 | expression . "%" expression
  117                 | expression . "<" expression
  118                 | expression . "<=" expression
  119                 | expression . "=" expression
  120                 | expression . "/=" expression
  121                 | expression . ">" expression
  122                 | expression . ">=" expression

    AND   shift, and go to state 122
    OR    shift, and go to state 123
    THEN  shift, and go to state 243
    "."   shift, and go to state 124
    "+"   shift, and go to state 125
    "-"   shift, and go to state 126
    "*"   shift, and go to state 127
    "/"   shift, and go to state 128
    "%"   shift, and go to state 129
    "<"   shift, and go to state 130
    "<="  shift, and go to state 131
    "="   shift, and go to state 132
    "/="  shift, and go to state 133
    ">"   shift, and go to state 134
    ">="  shift, and go to state 135


State 234

   73 elseif_list: elseif_expre elseif_list .

    $default  reduce using rule 73 (elseif_list)


State 235

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   55 statement_list: . statement
   56               | . ";" statement_list
   57               | . statement semicolon_list
   58               | . statement ";" statement_list
   59 statement: . routine_argument
   60          | . assign_statement
   61          | . if_statement
   62          | . return_statement
   63          | . typecase_statement
   64          | . expression_statement
   65          | . loop_statement
   66          | . yield_statement
   67          | . QUIT
   68 assign_statement: . expression ":=" expression
   69                 | . ID ":" ":=" expression
   70                 | . ID ":" type_specifier ":=" expression
   74 if_statement: . IF expression THEN statement_list END
   75             | . IF expression THEN statement_list elseif_list END
   76             | . IF expression THEN statement_list ELSE statement_list END
   77             | . IF expression THEN statement_list elseif_list ELSE statement_list END
   77             | IF expression THEN statement_list elseif_list ELSE . statement_list END
   78 return_statement: . RETURN
   79                 | . RETURN expression
   83 typecase_statement: . TYPECASE ID when_list END
   84                   | . TYPECASE ID when_list ELSE statement_list END
   85 expression_statement: . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression
  126 loop_statement: . LOOP statement_list END
  127 yield_statement: . YIELD
  128                | . YIELD expression

    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    UPCASE_ID  shift, and go to state 40
    INT        shift, and go to state 52
    BOOL       shift, and go to state 53
    CHAR       shift, and go to state 54
    BREAK      shift, and go to state 55
    IF         shift, and go to state 56
    LOOP       shift, and go to state 57
    NEW        shift, and go to state 58
    QUIT       shift, and go to state 59
    RETURN     shift, and go to state 60
    SELF       shift, and go to state 61
    TYPECASE   shift, and go to state 62
    VOID       shift, and go to state 63
    WHILE      shift, and go to state 64
    YIELD      shift, and go to state 65
    "("        shift, and go to state 66
    ";"        shift, and go to state 67
    "-"        shift, and go to state 68
    "~"        shift, and go to state 69
    "#"        shift, and go to state 70

    name                  go to state 41
    routine_argument      go to state 71
    identifier_list       go to state 72
    statement_list        go to state 244
    statement             go to state 74
    assign_statement      go to state 75
    if_statement          go to state 76
    return_statement      go to state 77
    typecase_statement    go to state 78
    expression_statement  go to state 79
    expression            go to state 80
    call_expression       go to state 81
    create_expression     go to state 82
    sugar_expression      go to state 83
    loop_statement        go to state 84
    yield_statement       go to state 85


State 236

   75 if_statement: IF expression THEN statement_list elseif_list END .

    $default  reduce using rule 75 (if_statement)


State 237

   80 when_expr: WHEN type_specifier THEN statement_list .

    $default  reduce using rule 80 (when_expr)


State 238

   84 typecase_statement: TYPECASE ID when_list ELSE statement_list END .

    $default  reduce using rule 84 (typecase_statement)


State 239

  105 call_expression: expression "." call_name "(" expression_list ")" .

    $default  reduce using rule 105 (call_expression)


State 240

   36 routine_def_public: ID "(" routine_arg_list ")" ":" type_specifier IS statement_list . END

    END  shift, and go to state 245


State 241

   46 iter_definition_public: ITER_NAME "(" iter_arg_list ")" ":" type_specifier IS statement_list . END

    END  shift, and go to state 246


State 242

   76 if_statement: IF expression THEN statement_list ELSE statement_list END .

    $default  reduce using rule 76 (if_statement)


State 243

    8 name: . UPCASE_ID
    9     | . ID
   10 routine_argument: . ID ":" type_specifier
   11                 | . identifier_list "," ID ":" type_specifier
   12 identifier_list: . name
   13                | . identifier_list "," name
   55 statement_list: . statement
   56               | . ";" statement_list
   57               | . statement semicolon_list
   58               | . statement ";" statement_list
   59 statement: . routine_argument
   60          | . assign_statement
   61          | . if_statement
   62          | . return_statement
   63          | . typecase_statement
   64          | . expression_statement
   65          | . loop_statement
   66          | . yield_statement
   67          | . QUIT
   68 assign_statement: . expression ":=" expression
   69                 | . ID ":" ":=" expression
   70                 | . ID ":" type_specifier ":=" expression
   71 elseif_expre: ELSIF expression THEN . statement_list
   74 if_statement: . IF expression THEN statement_list END
   75             | . IF expression THEN statement_list elseif_list END
   76             | . IF expression THEN statement_list ELSE statement_list END
   77             | . IF expression THEN statement_list elseif_list ELSE statement_list END
   78 return_statement: . RETURN
   79                 | . RETURN expression
   83 typecase_statement: . TYPECASE ID when_list END
   84                   | . TYPECASE ID when_list ELSE statement_list END
   85 expression_statement: . expression
   86 expression: . BOOL
   87           | . CHAR
   88           | . STRING
   89           | . INT
   90           | . SELF
   91           | . ID
   92           | . call_expression
   93           | . VOID
   94           | . VOID "(" expression ")"
   95           | . NEW
   96           | . create_expression
   97           | . sugar_expression
   98           | . WHILE "(" expression ")"
   99           | . BREAK
  104 call_expression: . expression "." call_name
  105                | . expression "." call_name "(" expression_list ")"
  106 create_expression: . "#"
  107                  | . "#" type_specifier
  108                  | . "#" type_specifier "(" expression_list ")"
  109                  | . "#" "(" expression_list ")"
  110 sugar_expression: . expression AND expression
  111                 | . expression OR expression
  112                 | . expression "+" expression
  113                 | . expression "-" expression
  114                 | . expression "*" expression
  115                 | . expression "/" expression
  116                 | . expression "%" expression
  117                 | . expression "<" expression
  118                 | . expression "<=" expression
  119                 | . expression "=" expression
  120                 | . expression "/=" expression
  121                 | . expression ">" expression
  122                 | . expression ">=" expression
  123                 | . "-" expression
  124                 | . "(" expression ")"
  125                 | . "~" expression
  126 loop_statement: . LOOP statement_list END
  127 yield_statement: . YIELD
  128                | . YIELD expression

    ID         shift, and go to state 50
    STRING     shift, and go to state 51
    UPCASE_ID  shift, and go to state 40
    INT        shift, and go to state 52
    BOOL       shift, and go to state 53
    CHAR       shift, and go to state 54
    BREAK      shift, and go to state 55
    IF         shift, and go to state 56
    LOOP       shift, and go to state 57
    NEW        shift, and go to state 58
    QUIT       shift, and go to state 59
    RETURN     shift, and go to state 60
    SELF       shift, and go to state 61
    TYPECASE   shift, and go to state 62
    VOID       shift, and go to state 63
    WHILE      shift, and go to state 64
    YIELD      shift, and go to state 65
    "("        shift, and go to state 66
    ";"        shift, and go to state 67
    "-"        shift, and go to state 68
    "~"        shift, and go to state 69
    "#"        shift, and go to state 70

    name                  go to state 41
    routine_argument      go to state 71
    identifier_list       go to state 72
    statement_list        go to state 247
    statement             go to state 74
    assign_statement      go to state 75
    if_statement          go to state 76
    return_statement      go to state 77
    typecase_statement    go to state 78
    expression_statement  go to state 79
    expression            go to state 80
    call_expression       go to state 81
    create_expression     go to state 82
    sugar_expression      go to state 83
    loop_statement        go to state 84
    yield_statement       go to state 85


State 244

   77 if_statement: IF expression THEN statement_list elseif_list ELSE statement_list . END

    END  shift, and go to state 248


State 245

   36 routine_def_public: ID "(" routine_arg_list ")" ":" type_specifier IS statement_list END .

    $default  reduce using rule 36 (routine_def_public)


State 246

   46 iter_definition_public: ITER_NAME "(" iter_arg_list ")" ":" type_specifier IS statement_list END .

    $default  reduce using rule 46 (iter_definition_public)


State 247

   71 elseif_expre: ELSIF expression THEN statement_list .

    $default  reduce using rule 71 (elseif_expre)


State 248

   77 if_statement: IF expression THEN statement_list elseif_list ELSE statement_list END .

    $default  reduce using rule 77 (if_statement)
